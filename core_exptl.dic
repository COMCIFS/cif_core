##############################################################################
#                                                                            #
#                      CIF CORE EXPERIMENTAL DATA DICTIONARY                 #
#                                                                            #
##############################################################################
 
data_CORE_EXPTL
 
    _dictionary.title            CORE_EXPTL
    _dictionary.class            Instance
    _dictionary.version          2.4.08 
    _dictionary.date             2013-09-08
    _dictionary.uri              www.iucr.org/cif/dic/core_exptl.dic
    _dictionary.ddl_conformance  3.11.04
    _dictionary.namespace        CoreExptl
    _description.text
;
     This dictionary contains the definitions of data items that
     are CORE to the description of the crystal identification and
     classification experiments. That is crystal, cell and chemical
     data.
;
 

save_EXPERIMENTAL
    _definition.id               EXPERIMENTAL
    _definition.scope            Category
    _definition.class            Head
    _definition.update           2012-11-22
    _description.text
;
    The DICTIONARY group encompassing the CORE experimental data defined
    and used with in the Crystallographic Information Framework (CIF).
;
    _name.category_id            CIF_CORE
    _name.object_id              EXPERIMENTAL



#============================================================================

save_EXPERIMENTS
    _definition.id               EXPERIMENTS
    _definition.scope            Category
    _definition.class            Ref-loop  
    _definition.update           2013-09-08
    _description.text
;
    This category is designed specifically to facilitate studies 
    involving multiple sets of experiments and their associated data
    values. The data items are defined within the EXPTL category.
    This category class is only used in an instance document when 
    there is more than one experiment encompassed by the category
    of EXPTL items. When this is the case each set of EXPTL data,
    one set per experiment, is enclosed in its own save frame.    
    In the instance document these are referred to as a loop of 
    the item _experiments.key.  See a typical example below.
    When only one set of experimental data exists the EXPTL items
    need not be enclosed in a save frame and the reference loop is
    unnecessary.
;
    _name.category_id            EXPERIMENTAL
    _name.object_id              EXPERIMENTS
    _category.key_id           '_experiments.key'    
    _category.key_list        ['_experiments.key']   

     loop_
    _description_example.case 
;
     In an instance document this category is typically invoked as 

            loop_ _experiments.key 
                           ${"frame":"exptl_blue"}$
                           ${"frame":"exptl_red"}$
;                               


save_experiments.key
    _definition.id             '_experiments.key'
    _definition.update           2012-11-22
    _description.text
;
     Unique key to a set of save frames in a looped list.
;
    _name.category_id            experiments
    _name.object_id              key
    _type.purpose                Key      
    _type.source                 Related
    _type.container              Ref-table
    _type.contents               Name
     loop_
    _description_example.case  '${"frame":phase1}$' 
     save_


#============================================================================
 
save_EXPTL
 
    _definition.id               EXPTL
    _definition.scope            Category
    _definition.class            Set 
    _definition.update           2012-11-22
    _description.text
;
     The CATEGORY of data items used to specify the experimental work
     prior to diffraction measurements. These include crystallization
     crystal measurements and absorption-correction techniques used..
;
    _name.category_id            EXPERIMENTS
    _name.object_id              EXPTL
 

 
save_exptl.id
    _definition.id             '_exptl.id'
    _definition.update           2012-11-22
    _description.text
;
     Code identifying an experiment if there are multiple sets of
     experimental data. See _experiments.key.
;
    _name.category_id            exptl
    _name.object_id              id
    _type.purpose                Encode
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Code
     save_
 

save_exptl.crystals_number
    _definition.id             '_exptl.crystals_number'
     loop_
    _alias.definition_id       '_exptl_crystals_number'
    _definition.update           2012-11-22
    _description.text
;
     Total number of crystals used in the measurement of intensities.
;
    _name.category_id            exptl
    _name.object_id              crystals_number
    _type.purpose                Number 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Count  
    _enumeration.range           1:
    _enumeration.default         1
     save_
 
 
save_exptl.special_details
    _definition.id             '_exptl.special_details'
     loop_
    _alias.definition_id       '_exptl_special_details'
                               '_exptl.details'
    _definition.update           2012-11-22
    _description.text
;
     Details of the experiment prior to intensity measurement.
     See also _exptl_crystal.preparation
;
    _name.category_id            exptl
    _name.object_id              special_details
    _type.purpose                Describe 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Text
     save_
 

save_exptl.transmission_factor_max
    _definition.id             '_exptl.transmission_factor_max'
     loop_
    _alias.definition_id       '_exptl_transmission_factor_max'
    _definition.update           2013-04-11
    _description.text
;
     The calculated maximum value of the transmission factor for
     the specimen. Its value does not include the effects of
     absorption in the specimen mount. The presence of this
     item does not imply that the structure factors have been
     corrected for absorption. For the applied correction see
     _exptl_absorpt.correction_T_max.
;
    _name.category_id            exptl
    _name.object_id              transmission_factor_max
    _type.purpose                Measurand
    _type.source                 Derived
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:1.0
    _units.code                  none
     save_


save_exptl.transmission_factor_min
    _definition.id             '_exptl.transmission_factor_min'
     loop_
    _alias.definition_id       '_exptl_transmission_factor_min'
    _definition.update           2013-04-11
    _description.text
;
     The calculated minimum value of the transmission factor for
     the specimen. Its value does not include the effects of
     absorption in the specimen mount. The presence of this
     item does not imply that the structure factors have been 
     corrected for absorption. For the applied correction see
     _exptl_absorpt.correction_T_max.
;
    _name.category_id            exptl
    _name.object_id              transmission_factor_min
    _type.purpose                Measurand
    _type.source                 Derived 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:1.0
    _units.code                  none 
     save_


#============================================================================

save_EXPTL_CRYSTALS
    _definition.id               EXPTL_CRYSTALS
    _definition.scope            Category
    _definition.class            Ref-loop   
    _definition.update           2013-09-08
    _description.text
;
    This category is designed specifically to facilitate studies
    involving multiple sets of experiments and their associated data
    values. The data items are defined in the EXPTL_CRYSTAL category.
    This category class is only used in an instance document when
    there is more than one experiment encompassed by the category of 
    EXPTL items. When this is the case each set of EXPTL_CRYSTALa
    data, one set per experiment, is enclosed in its own save frame.
    In the instance document these are referred to as a loop of
    the item _experiments.key.  See a typical example below.
    When only one set of experimental data exists the EXPTL items
    need not be enclosed in a save frame and the reference loop is
    unnecessary.
;
    _name.category_id            EXPTL
    _name.object_id              CRYSTALS
    _category.key_id           '_exptl_crystals.key'
    _category.key_list        ['_exptl_crystals.key']

     loop_
    _description_example.case
;
     In an instance document this category is typically invoked as

            loop_ _exptl_crystals.key
                           ${"frame":"crystal_1"}$               
                           ${"frame":"crystal_2"}$               
;


save_exptl_crystals.key
    _definition.id             '_exptl_crystals.key'
    _definition.update           2012-11-22
    _description.text
;
     Unique key code to a set of EXPTL_CRYSTAL items in a looped list.
;
    _name.category_id            crystals
    _name.object_id              key
    _type.purpose                Key      
    _type.source                 Related
    _type.container              Ref-table
    _type.contents               Code
     loop_
    _description_example.case  '       ${"frame":c1}$       '
     save_


#----------------------------------------------------------------------------
 
save_EXPTL_CRYSTAL
 
    _definition.id               EXPTL_CRYSTAL
    _definition.scope            Category
    _definition.class            Set
    _definition.update           2012-11-22
    _description.text
;
     The CATEGORY of data items used to specify information about a
     crystal used in the diffraction measurements.
;
    _name.category_id            EXPTL_CRYSTALS
    _name.object_id              CRYSTAL

 
save_exptl_crystal.id
    _definition.id             '_exptl_crystal.id'
     loop_
    _alias.definition_id       '_exptl_crystal_id'
    _definition.update           2012-11-22
    _description.text
;
     Code identifying a crystal if multiple crystals are used.
     See _exptl_crystals.key.
;
    _name.category_id            crystal
    _name.object_id              id
    _type.purpose                Encode
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Code 
     save_

 
save_exptl_crystal.colour
    _definition.id             '_exptl_crystal.colour'
     loop_
    _alias.definition_id       '_exptl_crystal_colour'
    _definition.update           2012-11-22
    _description.text
;
     Colour description of a crystal as a list of the allowed
     exptl_crystal_appearance states for general, intensity and hue.
;
    _name.category_id            crystal
    _name.object_id              colour
    _type.purpose                Composite
    _type.source                 Derived
    _type.container              List
    _type.contents               Code
    _type.dimension              [3]
     loop_
    _description_example.case    "[transluscent, pale, green]"
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
     With  c  as  exptl_crystal_appearance
 
      _exptl_crystal.colour = [ c.general, c.intensity, c.hue ]
;
     save_
 
 
save_exptl_crystal.density_diffrn
    _definition.id             '_exptl_crystal.density_diffrn'
     loop_
    _alias.definition_id       '_exptl_crystal_density_diffrn'
    _definition.update           2012-11-22
    _description.text
;
     Crystal density calculated from crystal unit cell and atomic content.
;
    _name.category_id            crystal
    _name.object_id              density_diffrn
    _type.purpose                Measurand
    _type.source                 Derived 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  megagrams_per_metre_cubed
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
    _exptl_crystal.density_diffrn = 1.6605 * _cell.atomic_mass / _cell.volume 
;
     save_
 
 
save_exptl_crystal.density_meas
    _definition.id             '_exptl_crystal.density_meas'
     loop_
    _alias.definition_id       '_exptl_crystal_density_meas'
    _definition.update           2012-11-22
    _description.text
;
     Crystal density measured using standard chemical and physical methods.
;
    _name.category_id            crystal
    _name.object_id              density_meas
    _type.purpose                Measurand
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  megagrams_per_metre_cubed
     save_
 

save_exptl_crystal.density_meas_gt
    _definition.id             '_exptl_crystal.density_meas_gt'
     loop_
    _alias.definition_id       '_exptl_crystal_density_meas_gt'
    _definition.update           2012-12-11
    _description.text
;
     The value above which the density measured using standard 
     chemical and physical methods lies. This item is used only
     when _exptl_crystal.density_meas cannot be employed. It is 
     intended for use in reporting information in databases and 
     archives which would be misleading if reported otherwise.
;
    _name.category_id            crystal
    _name.object_id              density_meas_gt
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  megagrams_per_metre_cubed
     save_


save_exptl_crystal.density_meas_lt
    _definition.id             '_exptl_crystal.density_meas_lt'
     loop_
    _alias.definition_id       '_exptl_crystal_density_meas_lt'
    _definition.update           2012-12-11
    _description.text
;
     The value below which the density measured using standard 
     chemical and physical methods lies. This item is used only
     when _exptl_crystal.density_meas cannot be employed. It is 
     intended for use in reporting information in databases and
     archives which would be misleading if reported otherwise.
;
    _name.category_id            crystal
    _name.object_id              density_meas_lt
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  megagrams_per_metre_cubed
     save_

 
save_exptl_crystal.density_meas_temp
    _definition.id             '_exptl_crystal.density_meas_temp'
     loop_
    _alias.definition_id       '_exptl_crystal_density_meas_temp'
    _definition.update           2012-11-22
    _description.text
;
     Temperature at which _exptl_crystal.density_meas was determined.
;
    _name.category_id            crystal
    _name.object_id              density_meas_temp
    _type.purpose                Measurand
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _enumeration.default         293.
    _units.code                  kelvins
     save_
 

save_exptl_crystal.density_meas_temp_gt
    _definition.id             '_exptl_crystal.density_meas_temp_gt'
     loop_
    _alias.definition_id       '_exptl_crystal_density_meas_temp_gt'
    _definition.update           2012-12-11
    _description.text
;
     Temperature above which the measured density was determined. 
     This item is used only when exptl_crystal.density_meas_temp
     cannot be employed. It is intended for use in reporting values
     from databases which would be misleading if reported otherwise.
;
    _name.category_id            crystal
    _name.object_id              density_meas_temp_gt
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _enumeration.default         293.
    _units.code                  kelvins
     save_


save_exptl_crystal.density_meas_temp_lt
    _definition.id             '_exptl_crystal.density_meas_temp_lt'
     loop_
    _alias.definition_id       '_exptl_crystal_density_meas_temp_lt'
    _definition.update           2012-12-11
    _description.text
;   
     Temperature below which the measured density was determined. 
     This item is used only when exptl_crystal.density_meas_temp
     cannot be employed. It is intended for use in reporting values 
     from databases which would be misleading if reported otherwise.
;
    _name.category_id            crystal
    _name.object_id              density_meas_temp_lt
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _enumeration.default         293.
    _units.code                  kelvins
     save_

 
save_exptl_crystal.density_method
    _definition.id             '_exptl_crystal.density_method'
     loop_
    _alias.definition_id       '_exptl_crystal_density_method'
    _definition.update           2012-11-22
    _description.text
;
     Description of method used to measure _exptl_crystal.density_meas.
;
    _name.category_id            crystal
    _name.object_id              density_method
    _type.purpose                Describe 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case   'flotation in aqueous KI'
     save_
 
 
save_exptl_crystal.description
    _definition.id             '_exptl_crystal.description'
     loop_
    _alias.definition_id       '_exptl_crystal_description'
    _definition.update           2012-11-22
    _description.text
;
     Description of the quality and habit of the crystal. The crystal
     dimensions should appear in the exptl_crystal_size category.
;
    _name.category_id            crystal
    _name.object_id              description
    _type.purpose                Describe 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Text
     save_
 
save_exptl_crystal.F_000
    _definition.id             '_exptl_crystal.F_000'
     loop_
    _alias.definition_id       '_exptl_crystal_F_000'
    _definition.update           2012-11-22
    _description.text
;    
     Number of electrons in the crystal unit cell contributing to F(000).
     It may contain dispersion contributions, and is calculated as
 
          F(000) = [ (sum f~r~)^2^ + (sum f~i~)^2^ ]^1/2^
 
          f~r~   = real part of the scattering factors at theta = 0
          f~i~   = imaginary part of the scattering factors at theta = 0
 
                  the sum is taken over each atom in the unit cell

     For X-rays, non-dispersive F(000) is a positive number and counts 
     the effective number of electrons in the unit cell; for neutrons, 
     non-dispersive F(000) (which may be negative) counts the total 
     nuclear scattering power in the unit cell. See
        http://reference.iucr.org/dictionary/F(000)
;
    _name.category_id            crystal
    _name.object_id              F_000
    _type.purpose                Number 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
     loop_
    _method.purpose
    _method.expression
     Definition
;
         If (_diffrn_radiation.probe == "neutron")  _units.code =  "femtometres"
    Else If (_diffrn_radiation.probe == "electron") _units.code =  "volts"
    Else                                            _units.code =  "electrons"
;
     save_
 
 
save_exptl_crystal.preparation
    _definition.id             '_exptl_crystal.preparation'
     loop_
    _alias.definition_id       '_exptl_crystal_preparation'
    _definition.update           2012-11-22
    _description.text
;
     Details of crystal growth and preparation of the crystals
     (e.g.  mounting) prior to the intensity measurements.
;
    _name.category_id            crystal
    _name.object_id              preparation
    _type.purpose                Describe 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case   'mounted in an argon-filled quartz capillary'
     save_
 
 
save_exptl_crystal.pressure_history
    _definition.id             '_exptl_crystal.pressure_history'
     loop_
    _alias.definition_id       '_exptl_crystal_pressure_history'
    _definition.update           2012-11-22
    _description.text
;
     Details concerning the pressure history of the crystals.
;
    _name.category_id            crystal
    _name.object_id              pressure_history
    _type.purpose                Describe 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Text
     save_
 

save_exptl_crystal.recrystallization_method
    _definition.id             '_exptl_crystal.recrystallization_method'
     loop_
    _alias.definition_id       '_exptl_crystal_recrystallization_method'
    _definition.update           2012-12-11
    _description.text
;
     Method used to recrystallize the sample. Sufficient details should 
     be given for the procedure to be repeated. Temperatures, solvents, 
     flux or carrier gases with concentrations or pressures and ambient 
     atmosphere details should be given.
;
    _name.category_id            crystal
    _name.object_id              recrystallization_method
    _type.purpose                Describe
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Text
     save_


save_exptl_crystal.size_length
    _definition.id             '_exptl_crystal.size_length'
     loop_
    _alias.definition_id       '_exptl_crystal_size_length'
    _definition.update           2012-11-22
    _description.text
;
     The length of needle/cylindrical crystals.
;
    _name.category_id            crystal
    _name.object_id              size_length
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.:
    _units.code                  millimetres 
     save_
 
 
save_exptl_crystal.size_max
    _definition.id             '_exptl_crystal.size_max'
     loop_
    _alias.definition_id       '_exptl_crystal_size_max'
    _definition.update           2012-11-22
    _description.text
;
     The maximum dimension of a crystal.
;
    _name.category_id            crystal
    _name.object_id              size_max
    _type.purpose                Measurand 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.:
    _units.code                  millimetres 
     save_
 
 
save_exptl_crystal.size_mid
    _definition.id             '_exptl_crystal.size_mid'
     loop_
    _alias.definition_id       '_exptl_crystal_size_mid'
    _definition.update           2012-11-22
    _description.text
;
     The median dimension of a crystal.
;
    _name.category_id            crystal
    _name.object_id              size_mid
    _type.purpose                Measurand 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.:
    _units.code                  millimetres 
     save_
 
 
save_exptl_crystal.size_min
    _definition.id             '_exptl_crystal.size_min'
     loop_
    _alias.definition_id       '_exptl_crystal_size_min'
    _definition.update           2012-11-22
    _description.text
;
     The minimum dimension of a crystal.
;
    _name.category_id            crystal
    _name.object_id              size_min
    _type.purpose                Measurand 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.:
    _units.code                  millimetres 
     save_
 
 
save_exptl_crystal.size_rad
    _definition.id             '_exptl_crystal.size_rad'
     loop_
    _alias.definition_id       '_exptl_crystal_size_rad'
    _definition.update           2012-11-22
    _description.text
;
     The radius of a spherical or cylindrical crystal.
;
    _name.category_id            crystal
    _name.object_id              size_rad
    _type.purpose                Measurand 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.:
    _units.code                  millimetres 
     save_
 
 
save_exptl_crystal.thermal_history
    _definition.id             '_exptl_crystal.thermal_history'
     loop_
    _alias.definition_id       '_exptl_crystal_thermal_history'
    _definition.update           2012-11-22
    _description.text
;
     Details concerning the thermal history of the crystals.
;
    _name.category_id            crystal
    _name.object_id              thermal_history
    _type.purpose                Describe 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Text
     save_


#----------------------------------------------------------------------------
 
save_EXPTL_CRYSTAL_FACE
 
    _definition.id               EXPTL_CRYSTAL_FACE
    _definition.scope            Category
    _definition.class            Loop
    _definition.update           2013-09-08
    _description.text
;
     The CATEGORY of data items which specify the dimensions of the
     crystals used in the diffraction measurements.
;
    _name.category_id            EXPTL_CRYSTAL
    _name.object_id              FACE
    _category.key_id           '_exptl_crystal_face.key'
    _category.key_list        ['_exptl_crystal_face.id']
 

save_exptl_crystal_face.key
    _definition.id             '_exptl_crystal_face.key'
    _definition.update           2012-11-22
    _description.text
;
     Value is a unique key to a set of EXPTL_CRYSTAL items 
     in a looped list.
;
    _name.category_id            face
    _name.object_id              key
    _type.purpose                Key
    _type.source                 Related
    _type.container              Single
    _type.contents               Implied
     loop_
    _method.purpose
    _method.expression
     Definition
;              _type.contents = Type_Contents(exptl_crystal_face.id)
;
     Evaluation
;              _exptl_crystal_face.key = _exptl_crystal_face.id
;
     save_
 
save_exptl_crystal_face.crystal_id
    _definition.id             '_exptl_crystal_face.crystal_id'
    _definition.update           2012-11-22
    _description.text
;
     Code identifying a crystal if multiple crystals are used.
;
    _name.category_id            face
    _name.object_id              crystal_id
    _name.linked_item_id       '_exptl_crystal.id'
    _type.purpose                Link 
    _type.source                 Related 
    _type.container              Single
    _type.contents               Code
     save_
 
 
save_exptl_crystal_face.diffr_chi
    _definition.id             '_exptl_crystal_face.diffr_chi'
     loop_
    _alias.definition_id       '_exptl_crystal_face_diffr_chi'
    _import.get        [{"file":'templ_attr.cif',"save":'face_angle'}]
    _name.category_id            face
    _name.object_id              diffr_chi
     save_
 
 
save_exptl_crystal_face.diffr_kappa
    _definition.id             '_exptl_crystal_face.diffr_kappa'
     loop_
    _alias.definition_id       '_exptl_crystal_face_diffr_kappa'
    _import.get        [{"file":'templ_attr.cif',"save":'face_angle'}]
    _name.category_id            face
    _name.object_id              diffr_kappa
     save_
 
 
save_exptl_crystal_face.diffr_phi
    _definition.id             '_exptl_crystal_face.diffr_phi'
     loop_
    _alias.definition_id       '_exptl_crystal_face_diffr_phi'
    _import.get        [{"file":'templ_attr.cif',"save":'face_angle'}]
    _name.category_id            face
    _name.object_id              diffr_phi
     save_
 
 
save_exptl_crystal_face.diffr_psi
    _definition.id             '_exptl_crystal_face.diffr_psi'
     loop_
    _alias.definition_id       '_exptl_crystal_face_diffr_psi'
    _import.get         [{"file":'templ_attr.cif',"save":'face_angle'}]
    _name.category_id            face
    _name.object_id              diffr_psi
     save_
 
 
save_exptl_crystal_face.hkl
    _definition.id             '_exptl_crystal_face.hkl'
    _definition.update           2012-11-22
    _description.text
;
     Miller indices of the crystal face.
;
    _name.category_id            face
    _name.object_id              hkl
    _type.purpose                Number
    _type.source                 Derived
    _type.container              Matrix
    _type.contents               Integer
    _type.dimension              [3]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
     With f as exptl_crystal_face
 
      _exptl_crystal_face.hkl = [f.index_h, f.index_h, f.index_l]
;
     save_
 

save_exptl_crystal_face.index_h
    _definition.id             '_exptl_crystal_face.index_h'
     loop_
    _alias.definition_id       '_exptl_crystal_face_index_h'
    _import.get       [{"file":'templ_attr.cif',"save":'Miller_index'}]
    _name.category_id            face
    _name.object_id              index_h
     save_
 
 
save_exptl_crystal_face.index_k
    _definition.id             '_exptl_crystal_face.index_k'
     loop_
    _alias.definition_id       '_exptl_crystal_face_index_k'
    _import.get        [{"file":'templ_attr.cif',"save":'Miller_index'}]
    _name.category_id            face
    _name.object_id              index_k
     save_
 
 
save_exptl_crystal_face.index_l
    _definition.id             '_exptl_crystal_face.index_l'
     loop_
    _alias.definition_id       '_exptl_crystal_face_index_l'
    _import.get        [{"file":'templ_attr.cif',"save":'Miller_index'}]
    _name.category_id            face
    _name.object_id              index_l
     save_
 
 
save_exptl_crystal_face.id
    _definition.id             '_exptl_crystal_face.id'
    _definition.update           2013-04-18
    _description.text
;
     Identifier which combines the crystal id and the face indices 
     as a list. This is normally the key item of the category.
;
    _name.category_id            face
    _name.object_id              id
    _type.purpose                Composite
    _type.source                 Derived
    _type.container              List 
    _type.contents              'Code,Matrix(Index,Index,index)'
    _type.dimension              [1]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
     With f as exptl_crystal_face

        _exptl_crystal_face.id = [ f.crystal_id, f.hkl ]
;
     save_
 
 
save_exptl_crystal_face.perp_dist
    _definition.id             '_exptl_crystal_face.perp_dist'
     loop_
    _alias.definition_id       '_exptl_crystal_face_perp_dist'
    _definition.update           2012-11-22
    _description.text
;
     Perpendicular distance of face to the centre of rotation of the crystal.
;
    _name.category_id            face
    _name.object_id              perp_dist
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  millimetres 
     save_
 
     save_    #----------- close of EXPTL_CRYSTAL_FACE category

#-------------------------------------------------------------------------------

save_EXPTL_CRYSTAL_APPEARANCE
 
    _definition.id               EXPTL_CRYSTAL_APPEARANCE
    _definition.scope            Category
    _definition.class            Set
    _definition.update           2012-11-22
    _description.text
;
     The CATEGORY of ENUMERATION items used to specify information about the
     crystal colour and appearance.
;
    _name.category_id            EXPTL_CRYSTAL
    _name.object_id              APPEARANCE
 
 
save_exptl_crystal_appearance.general
    _definition.id             '_exptl_crystal_appearance.general'
     loop_
    _alias.definition_id       '_exptl_crystal_colour_lustre'
    _definition.update           2012-11-22
    _description.text
;
     Appearance of the crystal as prescribed state codes.
;
    _name.category_id            appearance
    _name.object_id              general
    _type.purpose                State 
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Code
     loop_
    _enumeration_set.state      'metallic' 
                                'lustrous' 
                                'transparent' 
                                'transluscent' 
                                'opaque'
                                '.'
    _enumeration.default        '.'
     save_
 
 
save_exptl_crystal_appearance.intensity
    _definition.id             '_exptl_crystal_appearance.intensity'
     loop_
    _alias.definition_id       '_exptl_crystal_colour_modifier'
    _definition.update           2012-11-22
    _description.text
;
     Colour intensity of the crystal as prescribed state codes.
;
    _name.category_id            appearance
    _name.object_id              intensity
    _type.purpose                State 
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Code
     loop_
    _enumeration_set.state  dark      light     intense     pale 
                            whitish   blackish  grayish    brownish
                            reddish   pinkish   orangish   yellowish      
                            greenish  bluish    '.'
    _enumeration.default        '.'
     save_
 
 
save_exptl_crystal_appearance.hue
    _definition.id             '_exptl_crystal_appearance.hue'
     loop_
    _alias.definition_id       '_exptl_crystal_colour_primary'
    _definition.update           2012-11-22
    _description.text
;
     Colour hue of the crystals as prescribed state codes.
;
    _name.category_id            appearance
    _name.object_id              hue
    _type.purpose                State 
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Code
    _import.get       [{"file":'templ_enum.cif',"save":'colour_RGB'}]
    _enumeration.default        'white'
     save_

     save_    #------ close EXPTL_CRYSTAL_APPEARANCE category
 
     save_    #------ close EXPTL_CRYSTAL category

#---------------------------------------------------------------------------
 
save_EXPTL_ABSORPT
 
    _definition.id               EXPTL_ABSORPT
    _definition.scope            Category
    _definition.class            Set
    _definition.update           2012-11-22
    _description.text
;
     The CATEGORY of data items used to specify the experimental details
     of the  absorption measurements and corrections to the diffraction
     data. 
;
    _name.category_id            EXPTL_CRYSTALS
    _name.object_id              ABSORPT
 
 
save_exptl_absorpt.coefficient_mu
    _definition.id             '_exptl_absorpt.coefficient_mu'
     loop_
    _alias.definition_id       '_exptl_absorpt_coefficient_mu'
                               '_exptl.absorpt_coefficient_mu'
    _definition.update           2012-11-22
    _description.text
;
     Absorption coefficient mu calculated from the atomic content of
     the cell, the density and the radiation wavelength.
;
    _name.category_id            absorpt
    _name.object_id              coefficient_mu
    _type.purpose                Number 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  reciprocal_millimetres
     save_
 
 
save_exptl_absorpt.correction_T_max
    _definition.id             '_exptl_absorpt.correction_T_max'
     loop_
    _alias.definition_id       '_exptl_absorpt_correction_T_max'
                               '_exptl.absorpt_correction_T_max'
    _definition.update           2012-11-22
    _description.text
;
     Maximum transmission factor for the crystal and radiation applied
     to the measured intensities, it includes the correction for
     absorption by the specimen mount and diffractometer as well
     as by the specimen itself. These values give the transmission (T)
     factor by which measured intensities have been REDUCED due to 
     absorption. Sometimes referred to as absorption correction A or 
     1/A* (see "Crystal Structure Analysis for Chemists and Biologists"
     by J.P. Glusker et al., Wiley)
;
    _name.category_id            absorpt
    _name.object_id              correction_T_max
    _type.purpose                Number 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:1.0
    _units.code                  none
     save_
 
 
save_exptl_absorpt.correction_T_min
    _definition.id             '_exptl_absorpt.correction_T_min'
     loop_
    _alias.definition_id       '_exptl_absorpt_correction_T_min'
                               '_exptl.absorpt_correction_T_min'
    _definition.update           2012-11-22
    _description.text
;
     Maximum transmission factor for the crystal and radiation applied
     to the measured intensities, it includes the correction for
     absorption by the specimen mount and diffractometer as well
     as by the specimen itself. These values give the transmission (T)
     factor by which measured intensities have been REDUCED due to
     absorption. Sometimes referred to as absorption correction A ori
     1/A* (see "Crystal Structure Analysis for Chemists and Biologists"
     by J.P. Glusker et al., Wiley)
;
    _name.category_id            absorpt
    _name.object_id              correction_T_min
    _type.purpose                Number 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:1.0
    _units.code                  none
     save_
 
 
save_exptl_absorpt.correction_type
    _definition.id             '_exptl_absorpt.correction_type'
     loop_
    _alias.definition_id       '_exptl_absorpt_correction_type'
                               '_exptl.absorpt_correction_type'
    _definition.update           2012-11-22
    _description.text
;
     Code identifying the absorption correction type and method.
     The 'empirical' approach should NOT be used if more detailed 
     information on the crystal shape  is available.
;
    _name.category_id            absorpt
    _name.object_id              correction_type
    _type.purpose                State 
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Code
     loop_
    _enumeration_set.state
    _enumeration_set.detail  analytical  'analytical from crystal shape'
                             cylinder    'cylindrical'
                             empirical   'empirical from intensities'
                             gaussian    'Gaussian from crystal shape'
                             integration 'integration from crystal shape'
                             multi-scan  'symmetry-related measurements'
                             none        'no absorption correction applied'
                             numerical   'numerical from crystal shape'
                             psi-scan    'psi-scan corrections'
                             refdelf     'refined from delta-F'
                             sphere      'spherical'
    _enumeration.default     none  
     save_
 
 
save_exptl_absorpt.process_details
    _definition.id             '_exptl_absorpt.process_details'
     loop_
    _alias.definition_id       '_exptl_absorpt_process_details'
                               '_exptl.absorpt_process_details'
    _definition.update           2012-11-22
    _description.text
;
     Description of the absorption correction process applied to the
     measured intensities. A literature reference should be supplied
     for psi-scan or multi-scan techniques.
;
    _name.category_id            absorpt
    _name.object_id              process_details
    _type.purpose                Describe 
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case   'Tompa analytical'
                                'MolEN (Fair, 1990)'
                                '(North, Phillips & Mathews, 1968)'
     save_
 
     save_    #------ close EXPTL_ABSORPT category
 
     save_    #------ close EXPTL_CRYSTALS category
 

#============================================================================

save_CELL
 
    _definition.id               CELL
    _definition.scope            Category
    _definition.class            Set 
    _definition.update           2012-11-22
    _description.text
;
     The CATEGORY of data items used to describe the parameters of
     the crystal unit cell and their measurement.
;
    _name.category_id            EXPTL
    _name.object_id              CELL
 
 
save_cell.atomic_mass
    _definition.id             '_cell.atomic_mass'
    _definition.update           2012-11-22
    _description.text
;
     Atomic mass of the contents of the unit cell. This calculated
     from the atom sites present in the ATOM_TYPE list, rather than
     the ATOM_SITE lists of atoms in the refined model.
;
    _name.category_id            cell
    _name.object_id              atomic_mass
    _type.purpose                Number 
    _type.source                 Derived  
    _type.container              Single
    _type.contents               Real   
    _enumeration.range           0.:
    _units.code                  dalton
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
    mass = 0.

    Loop t as atom_type  {

                   mass += t.number_in_cell * t.atomic_mass
    }
      _cell.atomic_mass = mass
;
     save_
 
 
save_cell.formula_units_Z
    _definition.id             '_cell.formula_units_Z'
     loop_
    _alias.definition_id       '_cell_formula_units_Z'
    _definition.update           2012-11-22
    _description.text
;
     The number of the formula units in the unit cell as specified
     by _chemical_formula.structural, _chemical_formula.moiety or
     _chemical_formula.sum.
;
    _name.category_id            cell
    _name.object_id              formula_units_Z
    _type.purpose                Number 
    _type.source                 Assigned 
    _type.container              Single
    _type.contents               Count
    _enumeration.range           1:
     save_
 
 
save_cell.metric_tensor
    _definition.id             '_cell.metric_tensor'
    _definition.update           2012-11-22
    _description.text
;
     The direct space (covariant) metric tensor used to transform
     vectors and coordinates from real (direct) to reciprocal space.
;
    _name.category_id            cell
    _name.object_id              metric_tensor
    _type.purpose                Number
    _type.source                 Derived 
    _type.container              Matrix
    _type.contents               Real
    _type.dimension              [3,3]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
     with v  as  cell_vector
 
           _cell.metric_tensor = [[ v.a*v.a, v.a*v.b, v.a*v.c ],
                                  [ v.b*v.a, v.b*v.b, v.b*v.c ],
                                  [ v.c*v.a, v.c*v.b, v.c*v.c ]]
;
    save_

 
save_cell.orthogonal_matrix
    _definition.id             '_cell.orthogonal_matrix'
    _definition.update           2012-11-22
    _description.text
;
     Orthogonal matrix of the crystal unit cell. Definition uses
     Rollet's axial assignments with cell vectors a,b,c aligned
     with orthogonal axes X,Y,Z so that c||Z and b in plane YZ.
;
    _name.category_id            cell
    _name.object_id              orthogonal_matrix
    _type.purpose                Number
    _type.source                 Derived 
    _type.container              Matrix
    _type.contents               Real
    _type.dimension              [3,3]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
     With p  as  cell_length
     With q  as  cell_angle
     With r  as  cell_reciprocal_angle
 
    _cell.orthogonal_matrix =   [ 
          [  p.a*Sind(q.beta)*Sind(r.gamma),                 0,   0 ],
          [ -p.a*Sind(q.beta)*Cosd(r.gamma), p.b*Sind(q.alpha),   0 ],
          [  p.a*Cosd(q.beta),               p.b*Cosd(q.alpha), p.c ]] 
;
     save_
 
 
save_cell.special_details
    _definition.id             '_cell.special_details'
     loop_
    _alias.definition_id       '_cell_special_details'
    _definition.update           2012-11-22
    _description.text
;
     Description of special aspects of the cell choice, noting
     possible alternative settings.
;
    _name.category_id            cell
    _name.object_id              special_details
    _type.purpose                Describe  
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Text
     save_
 
 
save_cell.volume
    _definition.id             '_cell.volume'
     loop_
    _alias.definition_id       '_cell_volume'
    _definition.update           2013-03-07
    _description.text
;
     Volume of the crystal unit cell.
;
    _name.category_id            cell
    _name.object_id              volume
    _type.purpose                Measurand
    _type.source                 Derived 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  angstrom_cubed
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
      With v  as  cell_vector
 
      _cell.volume =  v.a * ( v.b ^ v.c )
;
     save_
 
#----------------------------------------------------------------------------
 

save_CELL_ANGLE
 
    _definition.id               CELL_ANGLE
    _definition.scope            Category
    _definition.class            Set
    _definition.update           2012-11-22
    _description.text
;
     The CATEGORY of data items used to describe the angles between
     the axes in the crystal unit cell.
;
    _name.category_id            CELL
    _name.object_id              ANGLE

 
save_cell_angle.alpha
    _definition.id             '_cell_angle.alpha'
     loop_
    _alias.definition_id       '_cell_angle_alpha'
                               '_cell.angle_alpha'
    _definition.update           2012-11-22
    _description.text
;
     The angle between the cell axes _cell_length.b and _cell_length.c.
;
    _name.category_id            angle
    _name.object_id              alpha
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:180.0
    _enumeration.default         90.0
    _units.code                  degrees
     save_
 

save_cell_angle.beta
    _definition.id             '_cell_angle.beta'
     loop_
    _alias.definition_id       '_cell_angle_beta'
                               '_cell.angle_beta'
    _definition.update           2012-11-22
    _description.text
;
     The angle between the cell axes _cell_length.a and _cell_length.c.
;
    _name.category_id            angle
    _name.object_id              beta
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:180.0
    _enumeration.default         90.0
    _units.code                  degrees
     save_

 
save_cell_angle.gamma
    _definition.id             '_cell_angle.gamma'
     loop_
    _alias.definition_id       '_cell_angle_gamma'
                               '_cell.angle_gamma'
    _definition.update           2012-11-22
    _description.text
;
     The angle between the cell axes _cell_length.a and _cell_length.b.
;
    _name.category_id            angle
    _name.object_id              gamma
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:180.0
    _enumeration.default         90.0
    _units.code                  degrees
     save_

     save_     #-------- close of CELL_ANGLE category
 

#----------------------------------------------------------------------------
 
save_CELL_LENGTH
 
    _definition.id               CELL_LENGTH
    _definition.scope            Category
    _definition.class            Set
    _definition.update           2012-11-22
    _description.text
;
     The CATEGORY of data items used to describe the lengths of
     the axes in the crystal unit cell.
;
    _name.category_id            CELL
    _name.object_id              LENGTH
 
 
save_cell_length.a
    _definition.id             '_cell_length.a'
     loop_
    _alias.definition_id       '_cell_length_a'
                               '_cell.length_a'
    _definition.update           2012-11-22
    _description.text
;
     The length of the crystal unit cell along the x-axis.
;
    _name.category_id            length
    _name.object_id              a
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           1.:
    _units.code                  angstroms
     save_
 
 
save_cell_length.b
    _definition.id             '_cell_length.b'
     loop_
    _alias.definition_id       '_cell_length_b'
                               '_cell.length_b'
    _definition.update           2012-11-22
    _description.text
;
     The length of the crystal unit cell along the y-axis.
;
    _name.category_id            length
    _name.object_id              b
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           1.:
    _units.code                  angstroms
     save_
 
 
save_cell_length.c
    _definition.id             '_cell_length.c'
     loop_
    _alias.definition_id       '_cell_length_c'
                               '_cell.length_c'
    _definition.update           2012-11-22
    _description.text
;
     The length of the crystal unit cell along the z-axis.
;
    _name.category_id            length
    _name.object_id              c
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           1.:
    _units.code                  angstroms
     save_

     save_     #-------- close of CELL_LENGTH category
 
 
#----------------------------------------------------------------------------
 
save_CELL_VECTOR
 
    _definition.id               CELL_VECTOR
    _definition.scope            Category
    _definition.class            Set
    _definition.update           2012-11-22
    _description.text
;
     The CATEGORY of data items used to describe the axial vectors of
     the crystal unit cell.
;
    _name.category_id            CELL
    _name.object_id              VECTOR
 
 
save_cell_vector.a
    _definition.id             '_cell_vector.a'
    _definition.update           2012-11-22
    _description.text
;
     The cell vector along the x axis. 
;
    _name.category_id            vector
    _name.object_id              a
    _type.purpose                Measurand
    _type.source                 Derived  
    _type.container              Matrix
    _type.contents               Real
    _type.dimension              [3]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
    _cell_vector.a = _cell.orthogonal_matrix * Matrix([1,0,0])
;
     save_
 
 
save_cell_vector.b
    _definition.id             '_cell_vector.b'
    _definition.update           2012-11-22
    _description.text
;
     The cell vector along the y axis. 
;
    _name.category_id            vector
    _name.object_id              b
    _type.purpose                Measurand
    _type.source                 Derived  
    _type.container              Matrix
    _type.contents               Real
    _type.dimension              [3]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
    _cell_vector.b = _cell.orthogonal_matrix * Matrix([0,1,0])
;
     save_
 
 
save_cell_vector.c
    _definition.id             '_cell_vector.c'
    _definition.update           2012-11-22
    _description.text
;
     The cell vector along the z axis. 
;
    _name.category_id            vector
    _name.object_id              c
    _type.purpose                Measurand
    _type.source                 Derived  
    _type.container              Matrix
    _type.contents               Real
    _type.dimension              [3]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
    _cell_vector.c = _cell.orthogonal_matrix * Matrix([0,0,1])
;
     save_

     save_    #------- close of CELL_VECTOR category
 
#----------------------------------------------------------------------------
 
save_CELL_MEASUREMENT
 
    _definition.id               CELL_MEASUREMENT
    _definition.scope            Category
    _definition.class            Set
    _definition.update           2012-11-22
    _description.text
;
     The CATEGORY of data items used to describe the angles between
     the axes in the crystal unit cell.
;
    _name.category_id            CELL
    _name.object_id              MEASUREMENT
 
 
save_cell_measurement.pressure
    _definition.id             '_cell_measurement.pressure'
     loop_
    _alias.definition_id       '_cell_measurement_pressure'
    _definition.update           2012-11-22
    _description.text
;
     The pressure at which the unit-cell parameters were measured
     (not the pressure used to synthesize the sample).
;
    _name.category_id            measurement
    _name.object_id              pressure
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  kilopascals
     save_
 
 
save_cell_measurement.radiation
    _definition.id             '_cell_measurement.radiation'
     loop_
    _alias.definition_id       '_cell_measurement_radiation'
    _definition.update           2012-11-22
    _description.text
;
     Description of the radiation used to measure the unit-cell data.
;
    _name.category_id            measurement
    _name.object_id              radiation
    _type.purpose                Describe 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case   'neutron'  'X-ray tube' 'synchrotron'
     save_
 
 
save_cell_measurement.reflns_used
    _definition.id             '_cell_measurement.reflns_used'
     loop_
    _alias.definition_id       '_cell_measurement_reflns_used'
    _definition.update           2012-11-22
    _description.text
;
     Total number of reflections used to determine the unit cell.
     The reflections may be specified as cell_measurement_refln items.
;
    _name.category_id            measurement
    _name.object_id              reflns_used
    _type.purpose                Number 
    _type.source                 Assigned 
    _type.container              Single
    _type.contents               Count
    _enumeration.range           3:
     save_
 
 
save_cell_measurement.temperature
    _definition.id             '_cell_measurement.temperature'
     loop_
    _alias.definition_id       '_cell_measurement_temperature'
    _definition.update           2012-11-22
    _description.text
;
     The temperature at which the unit-cell parameters were measured
     (not the temperature of synthesis).
;
    _name.category_id            measurement
    _name.object_id              temperature
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  kelvins
     save_
 
 
save_cell_measurement.theta_max
    _definition.id             '_cell_measurement.theta_max'
     loop_
    _alias.definition_id       '_cell_measurement_theta_max'
    _definition.update           2012-11-22
    _description.text
;
     Maximum theta scattering angle of reflections used to measure
     the crystal unit cell.
;
    _name.category_id            measurement
    _name.object_id              theta_max
    _type.purpose                Number 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:90.0
    _units.code                  degrees
     save_
 
 
save_cell_measurement.theta_min
    _definition.id             '_cell_measurement.theta_min'
     loop_
    _alias.definition_id       '_cell_measurement_theta_min'
    _definition.update           2012-11-22
    _description.text
;
     Minimum theta scattering angle of reflections used to measure
     the crystal unit cell.
;
    _name.category_id            measurement
    _name.object_id              theta_min
    _type.purpose                Number 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:90.0
    _units.code                  degrees
     save_
 
 
save_cell_measurement.wavelength
    _definition.id             '_cell_measurement.wavelength'
     loop_
    _alias.definition_id       '_cell_measurement_wavelength'
    _definition.update           2012-11-22
    _description.text
;
     Wavelength of the radiation used to measure the unit cell.
     If this is not specified, the wavelength is assumed to be the
     same as that given in _diffrn_radiation_wavelength.value
;
    _name.category_id            measurement
    _name.object_id              wavelength
    _type.purpose                Number 
    _type.source                 Assigned 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  angstroms
     save_
 

#----------------------------------------------------------------------------
 
save_CELL_MEASUREMENT_REFLN
 
    _definition.id               CELL_MEASUREMENT_REFLN
    _definition.scope            Category
    _definition.class            Loop
    _definition.update           2013-09-08
    _description.text
;
     The CATEGORY of data items used to describe the reflection data
     used in the measurement of the crystal unit cell.
;
    _name.category_id            CELL_MEASUREMENT
    _name.object_id              REFLN
    _category.key_id           '_cell_measurement_refln.key'
    _category.key_list        ['_cell_measurement_refln.index_h',
                               '_cell_measurement_refln.index_k',
                               '_cell_measurement_refln.index_l']
 

save_cell_measurement_refln.key
    _definition.id             '_cell_measurement_refln.key'
    _definition.update           2012-11-22
    _description.text
;
     Value is a unique key to a set of CELL_MEASUREMENT_REFLN items 
     in a looped list.
;
    _name.category_id            refln
    _name.object_id              key
    _type.purpose                Key
    _type.source                 Related
    _type.container              Single
    _type.contents               Implied
     loop_
    _method.purpose
    _method.expression
     Definition
;          _type.contents = Type_Contents(cell_measurement_refln.hkl)
;
     Evaluation
;          _cell_measurement_refln.key = _cell_measurement_refln.hkl
;
     save_


save_cell_measurement_refln.hkl
    _definition.id             '_cell_measurement_refln.hkl'
    _definition.update           2012-11-22
    _description.text
;
     Miller indices of a reflection used to measure the unit cell.
;
    _name.category_id            refln
    _name.object_id              hkl
    _type.purpose                Number
    _type.source                 Derived
    _type.container              Matrix
    _type.contents               Integer
    _type.dimension              [3]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
     With c  as  cell_measurement_refln
 
     _cell_measurement_refln.hkl = [c.index_h, c.index_k, c.index_l]
;
     save_
 
 
save_cell_measurement_refln.theta
    _definition.id             '_cell_measurement_refln.theta'
     loop_
    _alias.definition_id       '_cell_measurement_refln_theta'
    _definition.update           2012-11-22
    _description.text
;
     Theta angle of reflection used to measure the crystal unit cell.
;
    _name.category_id            refln
    _name.object_id              theta
    _type.purpose                Measurand 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:90.0
    _units.code                  degrees
     save_
 
 
save_cell_measurement_refln.index_h
    _definition.id             '_cell_measurement_refln.index_h'
     loop_
    _alias.definition_id       '_cell_measurement_refln_index_h'
    _import.get       [{"file":'templ_attr.cif',"save":'Miller_index'}]
    _name.category_id            refln
    _name.object_id              index_h
     save_
 
 
save_cell_measurement_refln.index_k
    _definition.id             '_cell_measurement_refln.index_k'
     loop_
    _alias.definition_id       '_cell_measurement_refln_index_k'
    _import.get       [{"file":'templ_attr.cif',"save":'Miller_index'}]
    _name.category_id            refln
    _name.object_id              index_k
     save_
 
 
save_cell_measurement_refln.index_l
    _definition.id             '_cell_measurement_refln.index_l'
     loop_
    _alias.definition_id       '_cell_measurement_refln_index_l'
    _import.get        [{"file":'templ_attr.cif',"save":'Miller_index'}]
    _name.category_id            refln
    _name.object_id              index_l
     save_
 
     save_    #------- close of CELL_MEASUREMENT_REFLN category
 
     save_    #------- close of CELL_MEASUREMENT category


#----------------------------------------------------------------------------
 

save_CELL_RECIPROCAL
 
    _definition.id               CELL_RECIPROCAL
    _definition.scope            Category
    _definition.class            Set
    _definition.update           2012-11-22
    _description.text
;
     The CATEGORY of data items used to describe the unit cell data  
     in reciprocal space.
;
    _name.category_id            CELL
    _name.object_id              RECIPROCAL
 
 
save_cell_reciprocal.convert_Uij_to_betaij
    _definition.id             '_cell_reciprocal.convert_Uij_to_betaij'
    _definition.update           2013-04-28
    _description.text
;
     The reciprocal space matrix for converting the U(ij) matrix of
     atomic displacement parameters to a dimensionless beta(IJ) matrix.
     The adp factor in a structure factor expression:
  
     t = exp -2pi**2 ( U11    h h a* a* + ...... 2 U23    k l b* c* ) 
     t = exp - 0.25  ( B11    h h a* a* + ...... 2 B23    k l b* c* ) 
       = exp -       ( beta11 h h + ............ 2 beta23 k l )

    The conversion of the U or B matrices to the beta matrix 

         beta =   C U C   =    C B C /8pi**2

    where C is conversion matrix defined here. 
;
    _name.category_id            reciprocal
    _name.object_id              convert_Uij_to_betaij
    _type.purpose                Measurand
    _type.source                 Derived  
    _type.container              Matrix
    _type.contents               Real
    _type.dimension              [3,3]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
    With r  as  cell_reciprocal_length

    _cell_reciprocal.convert_Uij_to_betaij = \
                             1.4142 * Pi * Matrix([[ r.a, 0, 0 ],
                                                   [ 0, r.b, 0 ],
                                                   [ 0, 0, r.c ]])
;
     save_


save_cell_reciprocal.convert_Uiso_to_Uij
    _definition.id             '_cell_reciprocal.convert_Uiso_to_Uij'
    _definition.update           2013-04-28
    _description.text
;
     The reciprocal space matrix for converting the isotropic Uiso 
     atomic displacement parameter to the anisotropic matrix Uij.       

                       | 1            cos(gamma*)   cos(beta*)  |
      U[i,j]  = Uiso * | cos(gamma*)  1             cos(alpha*) |
                       | cos(beta*)   cos(alpha*)   1           |

;
    _name.category_id            reciprocal
    _name.object_id              convert_Uiso_to_Uij
    _type.purpose                Measurand
    _type.source                 Derived
    _type.container              Matrix
    _type.contents               Real
    _type.dimension              [3,3]
     loop_
    _method.purpose
    _method.expression
     Evaluation
;
    With r  as  cell_reciprocal_angle
    
    _cell_reciprocal.convert_Uiso_to_Uij = \
                          [[ 1., Cosd(r.gamma), Cosd(r.beta)  ],
                           [ Cosd(r.gamma), 1., Cosd(r.alpha) ],
                           [ Cosd(r.beta), Cosd(r.alpha), 1.  ]]
;
     save_


save_cell_reciprocal.metric_tensor
    _definition.id             '_cell_reciprocal.metric_tensor'
    _definition.update           2012-11-22
    _description.text
;
     The reciprocal (contravariant) metric tensor used to transform
     vectors and coordinates from reciprocal space to real (direct)
     space.
;
    _name.category_id            reciprocal
    _name.object_id              metric_tensor
    _type.purpose                Measurand
    _type.source                 Derived  
    _type.container              Matrix
    _type.contents               Real
    _type.dimension              [3,3]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
     with r  as  cell_reciprocal_vector
 
    _cell_reciprocal.metric_tensor = [[ r.a*r.a, r.a*r.b, r.a*r.c ],
                                      [ r.b*r.a, r.b*r.b, r.b*r.c ],
                                      [ r.c*r.a, r.c*r.b, r.c*r.c ]] 
;
     save_

 
save_cell_reciprocal.orthogonal_matrix
    _definition.id             '_cell_reciprocal.orthogonal_matrix'
    _definition.update           2012-11-22
    _description.text
;
     Orthogonal matrix of the reciprocal space. The matrix may be 
     used to transform the non-orthogonal vector h = (h,k,l) into
     the orthogonal indices p = (p,q,r)

                     M h = p
;
    _name.category_id            reciprocal
    _name.object_id              orthogonal_matrix
    _type.purpose                Measurand
    _type.source                 Derived  
    _type.container              Matrix
    _type.contents               Real
    _type.dimension              [3,3]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
    _cell_reciprocal.orthogonal_matrix  =  Inverse(

                           Transpose( _cell.orthogonal_matrix ))
;
     save_
 

#----------------------------------------------------------------------------

 
save_CELL_RECIPROCAL_ANGLE
 
    _definition.id               CELL_RECIPROCAL_ANGLE
    _definition.scope            Category
    _definition.class            Set
    _definition.update           2012-11-22
    _description.text
;
     The CATEGORY of data items used to describe the unit cell angles
     in reciprocal space.
;
    _name.category_id            CELL_RECIPROCAL
    _name.object_id              ANGLE
 
 
save_cell_reciprocal_angle.alpha
    _definition.id             '_cell_reciprocal_angle.alpha'
     loop_
    _alias.definition_id       '_cell_reciprocal_angle_alpha'
    _definition.update           2013-01-18
    _description.text
;    
     Reciprocal of the angle between _cell_length.b and _cell_length.c.
     Ref: Buerger, M. J. (1942). X-ray Crystallography, p. 360.
          New York: John Wiley & Sons Inc.
;
    _name.category_id            angle
    _name.object_id              alpha
    _type.purpose                Measurand
    _type.source                 Derived  
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.:180.
    _units.code                  degrees
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
     With c as cell_angle

    _cell_reciprocal_angle.alpha = Acosd(
    (Cosd(c.beta)*Cosd(c.gamma)-Cosd(c.alpha))/(Sind(c.beta)*Sind(c.gamma)))
;
     save_
 
 
save_cell_reciprocal_angle.beta
    _definition.id             '_cell_reciprocal_angle.beta'
     loop_
    _alias.definition_id       '_cell_reciprocal_angle_beta'
    _definition.update           2013-01-18
    _description.text
;    
     Reciprocal of the angle between _cell_length.a and _cell_length.c.
     Ref: Buerger, M. J. (1942). X-ray Crystallography, p. 360.
          New York: John Wiley & Sons Inc.
;
    _name.category_id            angle
    _name.object_id              beta
    _type.purpose                Measurand
    _type.source                 Derived  
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.:180.
    _units.code                  degrees
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
     With c as cell_angle

    _cell_reciprocal_angle.beta = Acosd(
    (Cosd(c.alpha)*Cosd(c.gamma)-Cosd(c.beta))/(Sind(c.alpha)*Sind(c.gamma)))
;
     save_
 
 
save_cell_reciprocal_angle.gamma
    _definition.id             '_cell_reciprocal_angle.gamma'
     loop_
    _alias.definition_id       '_cell_reciprocal_angle_gamma'
    _definition.update           2013-01-18
    _description.text
;    
     Reciprocal of the angle between _cell_length.a and _cell_length.b.
     Ref: Buerger, M. J. (1942). X-ray Crystallography, p. 360.
          New York: John Wiley & Sons Inc.
;
    _name.category_id            angle
    _name.object_id              gamma
    _type.purpose                Measurand
    _type.source                 Derived  
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.:180.
    _units.code                  degrees
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
     With c as cell_angle

    _cell_reciprocal_angle.gamma = Acosd(
    (Cosd(c.alpha)*Cosd(c.beta)-Cosd(c.gamma))/(Sind(c.alpha)*Sind(c.beta)))
;
     save_
 
     save_   #--------- close of CELL_RECIPROCAL_ANGLE category


#----------------------------------------------------------------------------
 
save_CELL_RECIPROCAL_LENGTH
 
    _definition.id               CELL_RECIPROCAL_LENGTH
    _definition.scope            Category
    _definition.class            Set
    _definition.update           2012-11-22
    _description.text
;
     The CATEGORY of data items used to describe the unit cell lengths
     in reciprocal space.
;
    _name.category_id            CELL_RECIPROCAL
    _name.object_id              LENGTH
 
 
save_cell_reciprocal_length.a
    _definition.id             '_cell_reciprocal_length.a'
     loop_
    _alias.definition_id       '_cell_reciprocal_length_a'
    _definition.update           2012-11-22
    _description.text
;    
     Reciprocal of the _cell_length.a.
;
    _name.category_id            length
    _name.object_id              a
    _type.purpose                Measurand
    _type.source                 Derived  
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.:
    _units.code                  reciprocal_angstroms
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
    _cell_reciprocal_length.a = Norm ( _cell_reciprocal_vector.a )
;
     save_
 
 
save_cell_reciprocal_length.b
    _definition.id             '_cell_reciprocal_length.b'
     loop_
    _alias.definition_id       '_cell_reciprocal_length_b'
    _definition.update           2012-11-22
    _description.text
;    
     Reciprocal of the _cell_length.b.
;
    _name.category_id            length
    _name.object_id              b
    _type.purpose                Measurand
    _type.source                 Derived  
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.:
    _units.code                  reciprocal_angstroms
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
    _cell_reciprocal_length.b = Norm ( _cell_reciprocal_vector.b )
;
     save_
 
 
save_cell_reciprocal_length.c
    _definition.id             '_cell_reciprocal_length.c'
     loop_
    _alias.definition_id       '_cell_reciprocal_length_c'
    _definition.update           2012-11-22
    _description.text
;    
     Reciprocal of the _cell_length.c.
;
    _name.category_id            length
    _name.object_id              c
    _type.purpose                Measurand
    _type.source                 Derived  
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.:
    _units.code                  reciprocal_angstroms
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
    _cell_reciprocal_length.c = Norm ( _cell_reciprocal_vector.c )
;
     save_
 
     save_   #--------- close of CELL_RECIPROCAL_LENGTH category
 

#----------------------------------------------------------------------------
 
save_CELL_RECIPROCAL_VECTOR
 
    _definition.id               CELL_RECIPROCAL_VECTOR
    _definition.scope            Category
    _definition.class            Set
    _definition.update           2012-11-22
    _description.text
;
     The CATEGORY of data items used to describe the unit cell vectors
     in reciprocal space.
;
    _name.category_id            CELL_RECIPROCAL
    _name.object_id              VECTOR
 
 
save_cell_reciprocal_vector.a
    _definition.id             '_cell_reciprocal_vector.a'
    _definition.update           2012-11-22
    _description.text
;    
     Reciprocal of the _cell_vector.a.
;
    _name.category_id            vector
    _name.object_id              a
    _type.purpose                Measurand
    _type.source                 Derived  
    _type.container              Matrix
    _type.contents               Real
    _type.dimension              [3]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
     With c  as  cell_vector
 
    _cell_reciprocal_vector.a = c.b ^ c.c / _cell.volume
;
     save_
 
 
save_cell_reciprocal_vector.b
    _definition.id             '_cell_reciprocal_vector.b'
    _definition.update           2012-11-22
    _description.text
;    
     Reciprocal of the _cell_vector.b.
;
    _name.category_id            vector
    _name.object_id              b
    _type.purpose                Measurand
    _type.source                 Derived  
    _type.container              Matrix
    _type.contents               Real
    _type.dimension              [3]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
     With c  as  cell_vector
 
    _cell_reciprocal_vector.b = c.c ^ c.a / _cell.volume
;
     save_
 
 
save_cell_reciprocal_vector.c
    _definition.id             '_cell_reciprocal_vector.c'
    _definition.update           2012-11-22
    _description.text
;    
     Reciprocal of the _cell_vector.c.
;
    _name.category_id            vector
    _name.object_id              c
    _type.purpose                Measurand
    _type.source                 Derived  
    _type.container              Matrix
    _type.contents               Real
    _type.dimension              [3]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
     With c  as  cell_vector
 
    _cell_reciprocal_vector.c = c.a ^ c.b / _cell.volume
;
     save_
 
     save_   #--------- close of CELL_RECIPROCAL_VECTOR category
 
     save_   #--------- close of CELL_RECIPROCAL category
 
     save_   #--------- close of CELL category

 
#============================================================================
 
save_CHEMICAL
 
    _definition.id               CHEMICAL
    _definition.scope            Category
    _definition.class            Set
    _definition.update           2012-11-22
    _description.text
;
     The CATEGORY of data items which describe the composition and
     chemical properties of the compound under study. The formula data 
     items must be consistent with the density, unit-cell and Z values.
;
    _name.category_id            EXPTL
    _name.object_id              CHEMICAL
 
 
save_chemical.absolute_configuration
    _definition.id             '_chemical.absolute_configuration'
     loop_
    _alias.definition_id       '_chemical_absolute_configuration'
    _definition.update           2012-11-22
    _description.text
;
     Necessary conditions for this assignment are given by 
          Flack, H. D. & Bernardinelli, G. (1999). Acta Cryst. A55,
                       908-915. (http://www.iucr.org/paper?sh0129)
          Flack, H. D. & Bernardinelli, G. (2000). J. Appl. Cryst.
                       33, 1143-1148. (http://www.iucr.org/paper?ks0021)
;
    _name.category_id            chemical
    _name.object_id              absolute_configuration
    _type.purpose                State 
    _type.source                 Assigned 
    _type.container              Single
    _type.contents               Code 
     loop_
    _enumeration_set.state
    _enumeration_set.detail
     rm
;       'reference molecule' Absolute configuration established by
         the structure determination of a compound containing a 
         chiral reference molecule of known absolute configuration.
;
     ad
;       'anomalous dispersion' Absolute configuration established by
         a-d effects in diffraction measurements on the crystal.
;
     rmad
;       'rm + ad' Absolute configuration established by the structure 
         determination of a compound containing a chiral reference
         molecule of known absolute configuration and confirmed by
         a-d effects in diffraction measurements on the crystal.
;
     syn
;       'synthetic' Absolute configuration has not been established 
         by anomalous-dispersion effects in diffraction measurements on
         the crystal. The enantiomer has been assigned by reference to 
         an unchanging chiral centre in the synthetic procedure.
;
     unk
;       'unknown' No firm chemical or a-d evidence for an assignment 
         is available. An arbitrary choice of enantiomer has been made.
;
    '.' 'inapplicable'
    _enumeration.default       '.'     
     save_
 
 
save_chemical.compound_source
    _definition.id             '_chemical.compound_source'
     loop_
    _alias.definition_id       '_chemical_compound_source'
    _definition.update           2012-11-22
    _description.text
;
     Description of the source of the compound under study, or of the
     parent  molecule if a simple derivative is studied. This includes
     the place of  discovery for minerals or the actual source of a
     natural product.
;
    _name.category_id            chemical
    _name.object_id              compound_source
    _type.purpose                Describe 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Text
     save_
 

save_chemical.enantioexcess_bulk
    _definition.id             '_chemical.enantioexcess_bulk'
     loop_
    _alias.definition_id       '_chemical_enantioexcess_bulk'
    _definition.update           2013-01-18
    _description.text
;
     The enantioexcess of the bulk material from which the crystals 
     were grown. A value of 0.0 indicates the racemate. A value of 
     1.0 indicates that the compound is enantiomerically pure.
     Enantioexcess is defined in the IUPAC Recommendations
     (Moss et al., 1996). The composition of the crystal
     and bulk must be the same.
     Ref: Moss G. P. et al. (1996). Basic Terminology of
          Stereochemistry. Pure Appl. Chem., 68, 2193-2222.
          http://www.chem.qmul.ac.uk/iupac/stereo/index.html
;
    _name.category_id            chemical
    _name.object_id              enantioexcess_bulk
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:1.0
    _units.code                  none
     save_


save_chemical.enantioexcess_bulk_technique
    _definition.id             '_chemical.enantioexcess_bulk_technique'
     loop_
    _alias.definition_id       '_chemical_enantioexcess_bulk_technique'
    _definition.update           2013-01-18
    _description.text
;
     Technique used to determine the enantioexcess of the bulk compound.
;
    _name.category_id            chemical
    _name.object_id              enantioexcess_bulk_technique
    _type.purpose                State
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Code
     loop_
    _enumeration_set.state
    _enumeration_set.detail
     OA
;    Enantioexcess determined by measurement of the specific rotation
     of the optical activity of the bulk compound in solution.
;
     CD
;    Enantioexcess determined by measurement of the visible/near UV
     circular dichroism spectrum of the bulk compound in solution.
;
     EC
;    Enantioexcess determined by enantioselective chromatography of
     the bulk compound in solution.
;
     other
;    Enantioexcess determined by a technique not in this list.
;
    _enumeration.default       OA      
     save_


save_chemical.enantioexcess_crystal
    _definition.id             '_chemical.enantioexcess_crystal'
     loop_
    _alias.definition_id       '_chemical_enantioexcess_crystal'
    _definition.update           2013-01-18
    _description.text
;
     The enantioexcess of the crystal used for the diffraction
     study. A value of 0.0 indicates the racemate. A value of
     1.0 indicates that the crystal is enantiomerically pure.
     Enantioexcess is defined in the IUPAC Recommendations
     (Moss et al., 1996).
     Ref: Moss G. P. et al. (1996). Basic Terminology of
          Stereochemistry. Pure Appl. Chem., 68, 2193-2222.
          http://www.chem.qmul.ac.uk/iupac/stereo/index.html
;
    _name.category_id            chemical
    _name.object_id              enantioexcess_crystal
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:1.0
    _units.code                  none
     save_


save_chemical.enantioexcess_crystal_technique
    _definition.id             '_chemical.enantioexcess_crystal_technique'
     loop_
    _alias.definition_id       '_chemical_enantioexcess_crystal_technique'
    _definition.update           2013-01-18
    _description.text
;
     Technique used to determine the enantioexcess of the crystal.
;
    _name.category_id            chemical
    _name.object_id              enantioexcess_crystal_technique
    _type.purpose                State
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Code
     loop_
    _enumeration_set.state
    _enumeration_set.detail
     CD                          
;    Enantioexcess determined by measurement of the visible/near UV
     circular dichroism spectrum of the crystal taken into solution.
;
     EC                          
;    Enantioexcess determined by enantioselective chromatography of
     the crystal taken into solution.
;
     other                       
;    Enantioexcess determined by a technique not in this list.
;
    _enumeration.default       CD      
     save_


save_chemical.identifier_inchi
    _definition.id             '_chemical.identifier_inchi'
     loop_
    _alias.definition_id       '_chemical_identifier_inchi'
    _definition.update           2013-01-18
    _description.text
;
     The IUPAC International Chemical Identifier (InChI) is a 
     textual identifier for chemical substances, designed to provide 
     a standard and human-readable way to encode molecular information 
     and to facilitate the search for such information in databases 
     and on the web.
     Ref: McNaught, A. (2006). Chem. Int. (IUPAC), 28 (6), 12-14.
          http://www.iupac.org/inchi/
;
    _name.category_id            chemical
    _name.object_id              identifier_inchi
    _type.purpose                Encode   
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Text
     loop_ _description_example.case
           _description_example.detail
       InChI=1/C10H8/c1-2-6-10-8-4-3-7-9(10)5-1/h1-8H'     naphthalene
     save_


save_chemical.identifier_inchi_key
    _definition.id             '_chemical.identifier_inchi_key'
     loop_
    _alias.definition_id       '_chemical_identifier_inchi_key'
    _definition.update           2013-01-18
    _description.text
;
     The InChIKey is a compact hashed version of the full InChI
     (IUPAC International Chemical Identifier), designed to allow
     for easy web searches of chemical compounds. See
     http://www.iupac.org/inchi/
;
    _name.category_id            chemical
    _name.object_id              identifier_inchi_key
    _type.purpose                Encode 
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Text
     loop_ _description_example.case
           _description_example.detail
        'InChIKey=OROGSEYTTFOCAN-DNJOTXNNBG'    codeine
     save_


save_chemical.identifier_inchi_version
    _definition.id             '_chemical.identifier_inchi_version'
     loop_
    _alias.definition_id       '_chemical_identifier_inchi_version'
    _definition.update           2013-01-18
    _description.text
;
     Version number of the InChI standard to which the associated 
     chemical identifier string applies.
;
    _name.category_id            chemical
    _name.object_id              identifier_inchi_version
    _type.purpose                Encode
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Code
     loop_ _description_example.case   1.03
     save_


save_chemical.melting_point
    _definition.id             '_chemical.melting_point'
     loop_
    _alias.definition_id       '_chemical_melting_point'
    _definition.update           2012-11-22
    _description.text
;
     The temperature at which a crystalline solid changes to a liquid.
;
    _name.category_id            chemical
    _name.object_id              melting_point
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  kelvins
     save_
 

save_chemical.melting_point_gt
    _definition.id             '_chemical.melting_point_gt'
     loop_
    _alias.definition_id       '_chemical_melting_point_gt'
    _definition.update           2012-12-11
    _description.text
;
     A temperature above which the melting point lies.
     _chemical.melting_point should be used in preference where possible.
;
    _name.category_id            chemical
    _name.object_id              melting_point_gt
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  kelvins
     save_


save_chemical.melting_point_lt
    _definition.id             '_chemical.melting_point_lt'
     loop_
    _alias.definition_id       '_chemical_melting_point_lt'
    _definition.update           2012-12-11
    _description.text
;
     A temperature below which the melting point lies.  
     _chemical.melting_point should be used in preference where possible.
;
    _name.category_id            chemical
    _name.object_id              melting_point_lt
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  kelvins
     save_

 
save_chemical.name_common
    _definition.id             '_chemical.name_common'
     loop_
    _alias.definition_id       '_chemical_name_common'
    _definition.update           2012-11-22
    _description.text
;
     Trivial name by which the compound is commonly known.
;
    _name.category_id            chemical
    _name.object_id              name_common
    _type.purpose                Encode 
    _type.source                 Assigned 
    _type.container              Single
    _type.contents               Text
     save_
 
 
save_chemical.name_mineral
    _definition.id             '_chemical.name_mineral'
     loop_
    _alias.definition_id       '_chemical_name_mineral'
    _definition.update           2012-11-22
    _description.text
;
     Mineral name accepted by the International Mineralogical Association.
     Use only for natural minerals.
;
    _name.category_id            chemical
    _name.object_id              name_mineral
    _type.purpose                Encode 
    _type.source                 Assigned 
    _type.container              Single
    _type.contents               Text
     save_
 
 
save_chemical.name_structure_type
    _definition.id             '_chemical.name_structure_type'
     loop_
    _alias.definition_id       '_chemical_name_structure_type'
    _definition.update           2012-11-22
    _description.text
;
     Commonly used structure-type name. Usually only applied to
     minerals or inorganic compounds.
;
    _name.category_id            chemical
    _name.object_id              name_structure_type
    _type.purpose                Encode 
    _type.source                 Assigned 
    _type.container              Single
    _type.contents               Text
     save_
 
 
save_chemical.name_systematic
    _definition.id             '_chemical.name_systematic'
     loop_
    _alias.definition_id       '_chemical_name_systematic'
    _definition.update           2012-11-22
    _description.text
;
     IUPAC or Chemical Abstracts full name of compound.
;
    _name.category_id            chemical
    _name.object_id              name_systematic
    _type.purpose                Encode 
    _type.source                 Assigned 
    _type.container              Single
    _type.contents               Text
     save_
 
 
save_chemical.optical_rotation
    _definition.id             '_chemical.optical_rotation'
     loop_
    _alias.definition_id       '_chemical_optical_rotation'
    _definition.update           2012-11-22
    _description.text
;
     The optical rotation in solution of the compound is
     specified in the following format:
 
        '[\a]^TEMP^~WAVE~ = SORT (c = CONC, SOLV)'
 
     where: TEMP is the temperature of the measurement in degrees Celsius,
            WAVE is an indication of the wavelength of the light
                 used for the measurement,
            CONC is the concentration of the solution given as the
                 mass of the substance in g in 100 ml of solution,
            SORT is the signed value (preceded by a + or a - sign)
                 of 100.\a/(l.c), where \a is the signed optical
                 rotation in degrees measured in a cell of length l in
                 dm and c is the value of CONC in g, and
            SOLV is the chemical formula of the solvent.
;
    _name.category_id            chemical
    _name.object_id              optical_rotation
    _type.purpose                Describe 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case   '[\a]^25^~D~ = +108 (c = 3.42, CHCl~3~)'
     save_


save_chemical.properties_biological
    _definition.id             '_chemical.properties_biological'
     loop_
    _alias.definition_id       '_chemical_properties_biological'
    _definition.update           2012-12-11
    _description.text
;
    A description of the biological properties of the material.
;
    _name.category_id            chemical
    _name.object_id              properties_biological
    _type.purpose                Describe
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case  
;    diverse biological activities including use as a laxative 
     and strong antibacterial activity against S. aureus and weak 
     activity against cyclooxygenase-1 (COX-1)
;
;    antibiotic activity against Bacillus subtilis (ATCC 6051) but no 
     significant activity against Candida albicans (ATCC 14053), 
     Aspergillus flavus (NRRL 6541) & Fusarium verticillioides (NRRL 25457)
;
;    weakly potent lipoxygenase nonredox inhibitor
;
;    no influenza A virus sialidase inhibitory & plaque reduction activities
;
;    low toxicity against Drosophila melanogaster
;
     save_


save_chemical.properties_physical
    _definition.id             '_chemical.properties_physical'
     loop_
    _alias.definition_id       '_chemical_properties_physical'
    _definition.update           2012-12-11
    _description.text            
;   
    A description of the physical properties of the material.
;
    _name.category_id            chemical
    _name.object_id              properties_physical
    _type.purpose                Describe
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case   
       air-sensitive   moisture-sensitive   hygroscopic
       deliquescent    oxygen-sensitive    photo-sensitive
       pyrophoric      semiconductor
      'ferromagnetic at low temperature' 'paramagnetic and thermochromic'
     save_


save_chemical.temperature_decomposition
    _definition.id             '_chemical.temperature_decomposition'
     loop_
    _alias.definition_id       '_chemical_temperature_decomposition'
    _definition.update           2012-12-11
    _description.text
;
     The temperature at which a crystalline solid decomposes.
;
    _name.category_id            chemical
    _name.object_id              temperature_decomposition
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  kelvins
     save_


save_chemical.temperature_decomposition_gt
    _definition.id             '_chemical.temperature_decomposition_gt'
     loop_
    _alias.definition_id       '_chemical_temperature_decomposition_gt'
    _definition.update           2012-12-11
    _description.text
;
     The temperature above which a crystalline solid decomposes.
    _chemical.temperature_decomposition should be used in preference.
;
    _name.category_id            chemical
    _name.object_id              temperature_decomposition_gt
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  kelvins
     save_


save_chemical.temperature_decomposition_lt
    _definition.id             '_chemical.temperature_decomposition_lt'
     loop_
    _alias.definition_id       '_chemical_temperature_decomposition_lt'
    _definition.update           2012-12-11
    _description.text
;
     The temperature below which a crystalline solid decomposes.    
    _chemical.temperature_decomposition should be used in preference.
;
    _name.category_id            chemical
    _name.object_id              temperature_decomposition_lt
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  kelvins
     save_


save_chemical.temperature_sublimation
    _definition.id             '_chemical.temperature_sublimation'
     loop_
    _alias.definition_id       '_chemical_temperature_sublimation'
    _definition.update           2012-12-11
    _description.text
;
     The temperature at which a crystalline solid sublimates.
;
    _name.category_id            chemical
    _name.object_id              temperature_sublimation
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  kelvins
     save_


save_chemical.temperature_sublimation_gt
    _definition.id             '_chemical.temperature_sublimation_gt'
     loop_
    _alias.definition_id       '_chemical_temperature_sublimation_gt'
    _definition.update           2012-12-11
    _description.text
;
     The temperature above which a crystalline solid sublimates.
    _chemical.temperature_sublimation should be used in preference.
;
    _name.category_id            chemical
    _name.object_id              temperature_sublimation_gt
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  kelvins
     save_


save_chemical.temperature_sublimation_lt
    _definition.id             '_chemical.temperature_sublimation_lt'
     loop_
    _alias.definition_id       '_chemical_temperature_sublimation_lt'
    _definition.update           2012-12-11
    _description.text
;
     The temperature below which a crystalline solid sublimates.
    _chemical.temperature_sublimation should be used in preference.
;
    _name.category_id            chemical
    _name.object_id              temperature_sublimation_lt
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:
    _units.code                  kelvins
     save_

#============================================================================
 
save_CHEMICAL_CONN_ATOM
 
    _definition.id               CHEMICAL_CONN_ATOM
    _definition.scope            Category
    _definition.class            Loop
    _definition.update           2013-09-08
    _description.text
;
     The CATEGORY of data items which describe the 2D chemical structure of
     the molecular species. They allow a 2D chemical diagram to be
     reconstructed for use in a publication or in a database search
     for structural and substructural relationships. In particular,
     the chemical_conn_atom data items provide information about the
     chemical properties of the atoms in the structure. In cases
     where crystallographic and molecular symmetry elements coincide
     they must also contain symmetry-generated atoms, so as to describe
     a complete chemical entity.
 
;
    _name.object_id              CONN_ATOM
    _name.category_id            CHEMICAL
    _category.key_id           '_chemical_conn_atom.key'
    _category.key_list        ['_chemical_conn_atom.number']
 

save_chemical_conn_atom.key
    _definition.id             '_chemical_conn_atom.key'
    _definition.update           2012-11-22
    _description.text
;
     Value is a unique key to a set of CHEMICAL_CONN_ATOM items 
     in a looped list.
;
    _name.category_id            conn_atom
    _name.object_id              key
    _type.purpose                Key
    _type.source                 Related
    _type.container              Single
    _type.contents               Implied
     loop_
    _method.purpose
    _method.expression
     Definition
;         _type.contents = Type_Contents(chemical_conn_atom.number))
;
     Evaluation
;         _chemical_conn_atom.key = _chemical_conn_atom.number
;
     save_
 
save_chemical_conn_atom.charge
    _definition.id             '_chemical_conn_atom.charge'
     loop_
    _alias.definition_id       '_chemical_conn_atom_charge'
    _definition.update           2012-11-22
    _description.text
;
     The net integer charge assigned to this atom. This is the
     formal charge assignment normally found in chemical diagrams.
;
    _name.category_id            conn_atom
    _name.object_id              charge
    _type.purpose                Number 
    _type.source                 Assigned 
    _type.container              Single
    _type.contents               Integer
    _enumeration.range           -6:6
    _enumeration.default         0
     save_
 
 
save_chemical_conn_atom.display_x
    _definition.id             '_chemical_conn_atom.display_x'
     loop_
    _alias.definition_id       '_chemical_conn_atom_display_x'
    _definition.update           2012-11-22
    _description.text
;
     Cartesian coordinate (x) of the atom site in a chemical diagram. The
     coordinate origin is at the lower left corner, the x axis is horizontal.
;
    _name.category_id            conn_atom
    _name.object_id              display_x
    _type.purpose                Number
    _type.source                 Derived 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:1.0
    _units.code                  none
     save_
 
 
save_chemical_conn_atom.display_y
    _definition.id             '_chemical_conn_atom.display_y'
     loop_
    _alias.definition_id       '_chemical_conn_atom_display_y'
    _definition.update           2012-11-22
    _description.text
;
     Cartesian coordinate (y) of the atom site in a chemical diagram. The
     coordinate origin is at the lower left corner, the y axis is vertical.
;
    _name.category_id            conn_atom
    _name.object_id              display_y
    _type.purpose                Number
    _type.source                 Derived 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           0.0:1.0
    _units.code                  none
     save_
 
 
save_chemical_conn_atom.NCA
    _definition.id             '_chemical_conn_atom.NCA'
     loop_
    _alias.definition_id       '_chemical_conn_atom_NCA'
    _definition.update           2012-11-22
    _description.text
;
     Total number of connected atoms excluding terminal hydrogen atoms.
;
    _name.category_id            conn_atom
    _name.object_id              NCA
    _type.purpose                Number
    _type.source                 Derived 
    _type.container              Single
    _type.contents               Count
    _enumeration.range           0:
     save_
 
 
save_chemical_conn_atom.NH
    _definition.id             '_chemical_conn_atom.NH'
     loop_
    _alias.definition_id       '_chemical_conn_atom_NH'
    _definition.update           2012-11-22
    _description.text
;
     Total number of hydrogen atoms attached to this atom,
     regardless of whether they are included in the refinement or
     the atom_site list. This number will be the same as
     _atom_site.attached_hydrogens only if none of the hydrogen
     atoms appear in the atom_site list.
;
    _name.category_id            conn_atom
    _name.object_id              NH
    _type.purpose                Number 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Count
    _enumeration.range           0:
     save_
 
 
save_chemical_conn_atom.number
    _definition.id             '_chemical_conn_atom.number'
     loop_
    _alias.definition_id       '_chemical_conn_atom_number'
    _definition.update           2012-11-22
    _description.text
;
     The chemical sequence number to be associated with this atom.
;
    _name.category_id            conn_atom
    _name.object_id              number
    _type.purpose                Number 
    _type.source                 Assigned 
    _type.container              Single
    _type.contents               Index  
    _enumeration.range           1:
     save_
 
 
save_chemical_conn_atom.type_symbol
    _definition.id             '_chemical_conn_atom.type_symbol'
     loop_
    _alias.definition_id       '_chemical_conn_atom_type_symbol'
    _definition.update           2012-11-22
    _description.text
;
     A code identifying the atom type.
;
    _name.category_id            conn_atom
    _name.object_id              type_symbol
    _name.linked_item_id       '_atom_type.symbol'
    _type.purpose                Link 
    _type.source                 Related 
    _type.container              Single
    _type.contents               Code        
     save_

     save_    #------ close the CHEMICAL_CONN_ATOM category
 
#----------------------------------------------------------------------------
 
save_CHEMICAL_CONN_BOND
 
    _definition.id               CHEMICAL_CONN_BOND
    _definition.scope            Category
    _definition.class            Loop
    _definition.update           2013-09-08
    _description.text
;
     The CATEGORY of data items which specify the connections between
     the atoms sites in the chemical_conn_atom list and the nature
     of the chemical bond between these atoms. These are details about 
     the two-dimensional (2D) chemical structure of the molecular species. 
     They allow a 2D chemical diagram to be reconstructed for use in a 
     publication or in a database search for structural and substructural
     relationships.

;
    _name.category_id            CHEMICAL
    _name.object_id              CONN_BOND
    _category.key_id           '_chemical_conn_bond.key'
    _category.key_list        ['_chemical_conn_bond.atom_1',
                               '_chemical_conn_bond.atom_2']
 

save_chemical_conn_bond.key
    _definition.id             '_chemical_conn_bond.key'
    _definition.update           2012-11-22
    _description.text
;
     Value is a unique key to a set of CHEMICAL_CONN_BOND items 
     in a looped list.
;
    _name.category_id            conn_bond
    _name.object_id              key
    _type.purpose                Key
    _type.source                 Related
    _type.container              Single
    _type.contents               Implied
     loop_
    _method.purpose
    _method.expression
     Definition
;         _type.contents = Type_Contents(chemical_conn_bond.id)      
;
     Evaluation
;         _chemical_conn_bond.key = _chemical_conn_bond.id
;
     save_
 
save_chemical_conn_bond.atom_1
    _definition.id             '_chemical_conn_bond.atom_1'
     loop_
    _alias.definition_id       '_chemical_conn_bond_atom_1'
    _definition.update           2012-11-22
    _description.text
;
     Index id of first atom in a bond connecting two atom sites.
;
    _name.category_id            conn_bond
    _name.object_id              atom_1
    _name.linked_item_id       '_chemical_conn_atom.number'
    _type.purpose                Link 
    _type.source                 Related
    _type.container              Single
    _type.contents               Index
    _enumeration.range           1:
     save_
 
 
save_chemical_conn_bond.atom_2
    _definition.id             '_chemical_conn_bond.atom_2'
     loop_
    _alias.definition_id       '_chemical_conn_bond_atom_2'
    _definition.update           2012-11-22
    _description.text
;
     Index id of second atom in a bond connecting two atom sites.
;
    _name.category_id            conn_bond
    _name.linked_item_id       '_chemical_conn_atom.number'
    _name.object_id              atom_2
    _type.purpose                Link 
    _type.source                 Related
    _type.container              Single
    _type.contents               Index
    _enumeration.range           1:
     save_
 
 
save_chemical_conn_bond.id
    _definition.id             '_chemical_conn_bond.id'
    _definition.update           2012-11-22
    _description.text
;
     Bond identifier composed of a list of two sequence indices
     specified as _chemical_conn_atom.number values.
;
    _name.category_id            conn_bond
    _name.object_id              id
    _type.purpose                Number 
    _type.source                 Derived
    _type.container              List 
    _type.contents               Index 
    _type.dimension              [2]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
    With  c  as  chemical_conn_bond

    _chemical_conn_bond.id =  [ c.atom_1, c.atom_2 ]
;
     save_
 
 
save_chemical_conn_bond.type
    _definition.id             '_chemical_conn_bond.type'
     loop_
    _alias.definition_id       '_chemical_conn_bond_type'
    _definition.update           2012-11-22
    _description.text
;
     Code for the chemical bond type.
;
    _name.category_id            conn_bond
    _name.object_id              type
    _type.purpose                State 
    _type.source                 Assigned 
    _type.container              Single
    _type.contents               Code
     loop_
    _enumeration_set.state
    _enumeration_set.detail      sing    'single bond'
                                 doub    'double bond'
                                 trip    'triple bond'
                                 quad    'quadruple bond'
                                 arom    'aromatic bond'
                                 poly    'polymeric bond'
                                 delo    'delocalized double bond'
                                 pi      'pi bond'
    _enumeration.default         sing
     save_

     save_     #------ close the CHEMICAL_CONN_BOND category
 

#----------------------------------------------------------------------------
 
save_CHEMICAL_FORMULA
 
    _definition.id               CHEMICAL_FORMULA
    _definition.scope            Category
    _definition.class            Set
    _definition.update           2012-11-22
    _description.text
;
     The CATEGORY of data items which specify the composition and chemical
     properties of the compound. The formula data items must agree
     with those that specify the density, unit-cell and Z values.
 
     The following rules apply to the construction of the data items
     _chemical_formula.analytical, *.structural and *.sum. For the
     data item *.moiety the formula construction is broken up into
     residues or moieties, i.e. groups of atoms that form a molecular
     unit or molecular ion. The  rules given below apply within each
     moiety but different requirements apply to the way that moieties
     are connected (see _chemical_formula.moiety).
 
     1. Only recognized element symbols may be used.
 
     2. Each element symbol is followed by a 'count' number. A count of
        '1' may be omitted.
 
     3. A space or parenthesis must separate each cluster of (element
        symbol + count).
 
     4. Where a group of elements is enclosed in parentheses, the
        multiplier for the group must follow the closing parentheses.
        That is, all element and group multipliers are assumed to be
        printed as subscripted numbers. [An exception to this rule
        exists for *.moiety formulae where pre- and post-multipliers
        are permitted for molecular units].
 
     5. Unless the elements are ordered in a manner that corresponds to
        their chemical structure, as in _chemical_formula.structural,
        the order of the elements within any group or moiety
        depends on whether or not carbon is present. If carbon is
        present, the order should be: C, then H, then the other
        elements in alphabetical order of their symbol. If carbon is
        not present, the elements are listed purely in alphabetic order
        of their symbol. This is the 'Hill' system used by Chemical
        Abstracts. This ordering is used in _chemical_formula.moiety
        and _chemical_formula.sum.
 
           _chemical_formula.iupac      '[Mo (C O)4 (C18 H33 P)2]'
           _chemical_formula.moiety     'C40 H66 Mo O4 P2'
           _chemical_formula.structural '((C O)4 (P (C6 H11)3)2)Mo'
           _chemical_formula.sum         'C40 H66 Mo O4 P2'
           _chemical_formula.weight      768.81
;
    _name.object_id              FORMULA
    _name.category_id            CHEMICAL
 
 
save_chemical_formula.analytical
    _definition.id             '_chemical_formula.analytical'
     loop_
    _alias.definition_id       '_chemical_formula_analytical'
    _definition.update           2012-11-22
    _description.text
;
     Formula determined by standard chemical analysis including trace
     elements. Parentheses are used only for standard uncertainties (su's).
;
    _name.category_id            formula
    _name.object_id              analytical
    _type.purpose                Encode 
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case    'Fe2.45(2)  Ni1.60(3)  S4'
     save_
 
 
save_chemical_formula.iupac
    _definition.id             '_chemical_formula.iupac'
     loop_
    _alias.definition_id       '_chemical_formula_iupac'
    _definition.update           2012-11-22
    _description.text
;
     Formula expressed in conformance with IUPAC rules for inorganic
     and metal-organic compounds where these conflict with the rules
     for any other chemical_formula entries. Typically used for
     formatting a formula in accordance with journal rules. This
     should appear in the data block in addition to the most
     appropriate of the other chemical_formula data names.
     Ref: IUPAC (1990). Nomenclature of Inorganic Chemistry.
          Oxford: Blackwell Scientific Publications.
;
    _name.category_id            formula
    _name.object_id              iupac
    _type.purpose                Encode 
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case    '[Co Re (C12 H22 P)2 (C O)6].0.5C H3 O H'
     save_
 
 
save_chemical_formula.moiety
    _definition.id             '_chemical_formula.moiety'
     loop_
    _alias.definition_id       '_chemical_formula_moiety'
    _definition.update           2012-11-22
    _description.text
;
     Formula with each discrete bonded residue or ion shown as a
     separate moiety. See above CHEMICAL_FORMULA for rules
     for writing chemical formulae. In addition to the general
     formulae requirements, the following rules apply:
        1. Moieties are separated by commas ','.
        2. The order of elements within a moiety follows general rule
           5 in CHEMICAL_FORMULA.
        3. Parentheses are not used within moieties but may surround
           a moiety. Parentheses may not be nested.
        4. Charges should be placed at the end of the moiety. The
           Singlege '+' or '-' may be preceded by a numerical multiplier
           and should be separated from the last (element symbol +
           count) by a space. Pre- or post-multipliers may be used for
           individual moieties.
;
    _name.category_id            formula
    _name.object_id              moiety
    _type.purpose                Encode 
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case   'C7 H4 Cl Hg N O3 S'
                                'C12 H17 N4 O S 1+, C6 H2 N3 O7 1-'
                                'C12 H16 N2 O6, 5(H2 O1)'
                                "(Cd 2+)3, (C6 N6 Cr 3-)2, 2(H2 O)"
     save_
 
 
save_chemical_formula.structural
    _definition.id             '_chemical_formula.structural'
     loop_
    _alias.definition_id       '_chemical_formula_structural'
    _definition.update           2012-11-22
    _description.text
;
     This formula should correspond to the structure as reported, i.e.
     trace elements not included in atom type and atom site lists should
     not be included. See category description for the rules for writing 
     chemical formulae for inorganics, organometallics, metal complexes 
     etc., in which  bonded groups are preserved as discrete entities 
     within parentheses, with post-multipliers as required. The order of 
     the elements should give as much information as possible about the 
     chemical structure.  Parentheses may be used and nested as required. 
     This formula should correspond to the structure as actually reported,
     i.e. trace elements not included in atom-type and atom-site lists 
     should not be included (see also _chemical_formula.analytical).
;
    _name.category_id            formula
    _name.object_id              structural
    _type.purpose                Encode 
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case   '(Pt (N H3)2 (C5 H7 N3 O)2) (Cl O4)2'
                                'Ca ((Cl O3)2 O)2 (H2 O)6'
     save_
 
 
save_chemical_formula.sum
    _definition.id             '_chemical_formula.sum'
     loop_
    _alias.definition_id       '_chemical_formula_sum'
    _definition.update           2012-11-22
    _description.text
;
     Chemical formulae in which all discrete bonded residues and ions are
     summed over the constituent elements, following the ordering given
     in rule 5 of the CATEGORY description. Parentheses normally not used.
;
    _name.category_id            formula
    _name.object_id              sum
    _type.purpose                Encode 
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case   'C18 H19 N7 O8 S'
     save_
 
 
save_chemical_formula.weight
    _definition.id             '_chemical_formula.weight'
     loop_
    _alias.definition_id       '_chemical_formula_weight'
    _definition.update           2012-11-22
    _description.text
;
     Mass corresponding to the formulae _chemical_formula.structural, 
     *_iupac, *_moiety or *_sum and, together with the Z value and cell
     parameters yield the density given as _exptl_crystal.density_diffrn.
;
    _name.category_id            formula
    _name.object_id              weight
    _type.purpose                Number 
    _type.source                 Derived 
    _type.container              Single
    _type.contents               Real
    _enumeration.range           1.0:
    _units.code                  dalton
     save_
 
 
save_chemical_formula.weight_meas
    _definition.id             '_chemical_formula.weight_meas'
     loop_
    _alias.definition_id       '_chemical_formula_weight_meas'
    _definition.update           2012-11-22
    _description.text
;
     Formula mass measured by a non-diffraction experiment.
;
    _name.category_id            formula
    _name.object_id              weight_meas
    _type.purpose                Measurand
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Real
    _enumeration.range           1.0:
    _units.code                  dalton
     save_
 
     save_     #------ close the CHEMICAL_FORMULA category
 
     save_     #------ close the CHEMICAL category


#============================================================================

save_SPACE_GROUPS
    _definition.id               SPACE_GROUPS
    _definition.scope            Category
    _definition.class            Ref-loop
    _definition.update           2013-09-08
    _description.text
;
     Contains all the data items that refer to the space group as a
     whole, such as its name, crystal system etc. It may be looped,
     for example, in a list of space groups and their properties.

     Only a subset of the SPACE_GROUP category items appear in the
     core dictionary.  The remainder are found in the cif_sym
     dictionary.

     Space group types are identified by their International Tables
     for Crystallography Vol. A number. Specific settings of the
     space groups can be identified either by their Hall symbol
     or by specifying their symmetry operations.

     The commonly-used Hermann-Mauguin symbol determines the
     space group type uniquely but several different Hermann-Mauguin
     symbols may refer to the same space group type. It contains
     information on the choice of the basis, but not on the
     choice of origin.  Different formats for the Hermann-Mauguin
     symbol are found in the cif_sym dictionary.

;
    _name.category_id            EXPTL
    _name.object_id              SPACE_GROUPS
    _category.key_id           '_space_groups.key'
    _category.key_list        ['_space_groups.key']

     loop_
    _description_example.case
;
     In an instance document this category is typically invoked as

            loop_ _exptl_crystals.key
                           ${"frame":"space_group_1"}$
                           ${"frame":"space_group_2"}$
;


save_space_groups.key
    _definition.id             '_space_groups.key'
    _definition.update           2012-11-22
    _description.text
;
     Unique key code to a set of SPACE_GROUP items in a looped list.
;
    _name.category_id            space_groups
    _name.object_id              key
    _type.purpose                Key
    _type.source                 Related
    _type.container              Ref-table
    _type.contents               Code
     loop_
    _description_example.case  '       ${"frame":"sg_set_1}$      '
     save_

#----------------------------------------------------------------------------

save_SPACE_GROUP

    _definition.id               SPACE_GROUP
    _definition.scope            Category
    _definition.class            Set
    _definition.update           2012-11-22
    _description.text
;
     The CATEGORY of data items used to specify space group 
     information about the crystal used in the diffraction measurements.
;
    _name.category_id            SPACE_GROUPS
    _name.object_id              SPACE_GROUP


save_space_group.id
    _definition.id             '_space_group.id'
     loop_
    _alias.definition_id       '_space_group_id'
    _definition.update           2012-11-22
    _description.text
;
     Code identifying a space group if multiple symmetries.
     See _exptl_crystals.key.
;
    _name.category_id            space_group
    _name.object_id              id
    _type.purpose                Encode
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Code
     save_

    
save_space_group.IT_number
    _definition.id             '_space_group.IT_number'
     loop_
    _alias.definition_id       '_space_group_IT_number'
    _definition.update           2012-11-22
    _description.text
;
     The number as assigned in International Tables for Crystallography 
     Vol A, specifying the proper affine class (i.e. the orientation 
     preserving affine class) of space groups (crystallographic space 
     group type) to which the space group belongs. This number defines 
     the space group type but not the coordinate system expressed.
;
    _name.category_id            space_group
    _name.object_id              IT_number
    _type.purpose                Number
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Integer
    _enumeration.range           1:
     save_


save_space_group.name_Hall
    _definition.id             '_space_group.name_Hall'
     loop_
    _alias.definition_id       '_space_group_name_Hall'
    _definition.update           2012-11-22
    _description.text
;
     Space group symbol defined by Hall. Each component of the 
     space group name is separated by a space or an underscore.  
     The use of space is strongly recommended because it specifies
     the coordinate system. The underscore in the name is only 
     retained because it was used in earlier archived files. It 
     should not be used in new CIFs.
     Ref: Hall, S. R. (1981). Acta Cryst. A37, 517-525
          [See also International Tables for Crystallography,
          Vol.B (1993) 1.4 Appendix B]
;
    _name.category_id            space_group
    _name.object_id              name_Hall
    _type.purpose                Encode
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case   'P 2ac  2n' '-R 3 2"'  'P 61 2 2 (0 0 -1)'
     save_


save_space_group.name_H_M_alt
    _definition.id             '_space_group.name_H_M_alt'
    loop_
    _alias.definition_id       '_space_group_name_H-M_alt'
    _definition.update           2013-03-09
    _description.text
;
    _space_group.name_H_M_alt allows for any Hermann-Mauguin symbol
     to be given. The way in which this item is used is determined
     by the user and in general is not intended to be interpreted by
     computer. It may, for example, be used to give one of the
     extended Hermann-Mauguin symbols given in Table 4.3.1 of
     International Tables for Crystallography Vol. A (1995) or
     a Hermann-Mauguin symbol for a conventional or unconventional
     setting.
     Each component of the space group name is separated by a
     space or underscore. The use of space is strongly
     recommended.  The underscore is only retained because it
     was used in earlier archived files. It should not be
     used in new CIFs. Subscripts should appear without special
     symbols. Bars should be given as negative signs before the
     numbers to which they apply.
     The commonly used Hermann-Mauguin symbol determines the space
     group type uniquely but a given space group type may be
     described by more than one Hermann-Mauguin symbol. The space
     group type is best described using _space_group_IT_number.
     The Hermann-Mauguin symbol may contain information on the
     choice of basis though not on the choice of origin. To
     define the setting uniquely use _space_group.name_Hall or
     list the symmetry operations.
;
    _name.category_id            space_group
    _name.object_id              name_H_M_alt
    _type.purpose                Encode
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case   
    _description_example.detail   
          'P 1 21/m 1'                     'space group No. 10'
          'P 2/n 2/n 2/n (origin at -1)'   'space group No. 48 origin 2'
          'R -3 2/m'                       'space group No. 166 rhomb'
;         loop_ 
         _space_group.id 
         _space_group.name_H_M_alt
                           1    'C m c m'
                           2    'C 2/c 2/m 21/m'
                           3    'A m a m'
;
                               'three examples for space group No. 63'

     save_


#-------------------------------------------------------------------------

save_SPACE_GROUP_SYMOP

    _definition.id               SPACE_GROUP_SYMOP
    _definition.scope            Category
    _definition.class            Loop
    _definition.update           2013-09-08
    _description.text
;
     The CATEGORY of data items used to describe symmetry equivalent sites
     in the crystal unit cell.
;
    _name.category_id            SPACE_GROUP
    _name.object_id              SYMOP
    _category.key_id           '_space_group_symop.key'
    _category.key_list        ['_space_group_symop.id']


save_space_group_symop.key
    _definition.id             '_space_group_symop.key'
    _definition.update           2012-11-22
    _description.text
;
     Value is a unique key to a set of space_group_symop items
     in a looped list.
;
    _name.category_id            symop
    _name.object_id              key
    _type.purpose                Key
    _type.source                 Related
    _type.container              Single
    _type.contents               Implied
     loop_
    _method.purpose
    _method.expression
     Definition
;         _type.contents = Type_Contents(_space_group_symop.id)
;
     Evaluation
;         _symmetry_equiv.key = _space_group_symop.id
;
     save_


save_space_group_symop.id
    _definition.id             '_space_group_symop.id'
     loop_
    _alias.definition_id       '_space_group_symop_id'
                               '_space_group_symop_sg_id'
    _definition.update           2012-11-22
    _description.text
;
     A sequential number that identifies each symmetry operation.
     The identity operation (i.e. _space_group_symop.operation_xyz 
     set to 'x,y,z') should be set to 1.      
;
    _name.category_id            symop
    _name.object_id              id
    _type.purpose                Number
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Index
    _enumeration.range           1:
     save_

save_space_group_symop.operation_xyz
    _definition.id             '_space_group_symop.operation_xyz'
     loop_
    _alias.definition_id       '_space_group_symop_operation_xyz'
    _definition.update           2012-11-22
    _description.text
;
     A parsable string giving one of the symmetry operations of the
     space group in algebraic form.  If W is a matrix representation
     of the rotational part of the symmetry operation defined by the
     positions and signs of x, y and z, and w is a column of
     translations defined by fractions, an equivalent position
     X' is generated from a given position X by the equation

               X' = WX + w

     (Note: X is used to represent bold_italics_x in International
     Tables for Crystallography Vol. A, Part 5)

     When a list of symmetry operations is given, it must contain
     a complete set of coordinate representatives which generates
     all the operations of the space group by the addition of
     all primitive translations of the space group. Such
     representatives are to be found as the coordinates of
     the general-equivalent position in International Tables for
     Crystallography Vol. A (2002), to which it is necessary to
     add any centring translations shown above the
     general-equivalent position.

     That is to say, it is necessary to list explicitly all the
     symmetry operations required to generate all the atoms in
     the unit cell defined by the setting used.
;
    _name.category_id            symop
    _name.object_id              operation_xyz
    _type.purpose                Encode
    _type.source                 Recorded
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case 
    _description_example.detail 
                                 'x,1/2-y,1/2+z'
    "glide reflection through the plane (x,1/4,z) with glide vector (1/2)c"
     save_

     save_   #------- close the SPACE_GROUP_SYMOP category

     save_   #------- close the SPACE_GROUP category

     save_   #------- close the SPACE_GROUPS category


#=======================================================================
 
save_SYMMETRY
 
    _definition.id               SYMMETRY
    _definition.scope            Category
    _definition.class            Set
    _definition.update           2012-11-22
    _description.text
;
     The CATEGORY of data items used to describe symmetry information
     used in crystallographic structure studies.
;
    _name.category_id            EXPTL
    _name.object_id              SYMMETRY
 
 
save_symmetry.cell_setting
    _definition.id             '_symmetry.cell_setting'
     loop_
    _alias.definition_id       '_symmetry_cell_setting'
                               '_space_group_crystal_system'
    _definition.update           2013-04-11
    _description.text
;
     Code for cell settings for this space-group symmetry.
;
    _name.category_id            symmetry
    _name.object_id              cell_setting
    _type.purpose                State 
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Code
     loop_
    _enumeration_set.state       triclinic
                                 monoclinic
                                 orthorhombic
                                 tetragonal
                                 rhombohedral
                                 trigonal
                                 hexagonal
                                 cubic
    _enumeration.default         triclinic
     loop_
    _method.purpose
    _method.expression
     Validation
;
    setting = _symmetry.cell_setting
    a   = _cell_length.a
    b   = _cell_length.b
    c   = _cell_length.c
    d   = 0.01
    alp = _cell_angle.alpha
    bet = _cell_angle.beta
    gam = _cell_angle.gamma
    warn_len = 'Possible mismatch between cell lengths and cell setting'
    warn_ang = 'Possible mismatch between cell angles and cell setting'

    If(setting == 'triclinic') {
      If( Abs(a-b)<d || Abs(a-c)<d || Abs(b-c)<d )          Alert('B', warn_len)
      If( Abs(alp-90)<d || Abs(bet-90)<d || Abs(gam-90)<d ) Alert('B', warn_ang)
    }
    Else If(setting == 'monoclinic') {
      If(( Abs(a-b)<d && Abs(a-c)<d ) ||
         ( Abs(a-b)<d && Abs(b-c)<d ) ||
         ( Abs(a-c)<d && Abs(b-c)<d ))                      Alert('B', warn_len)
      If( Abs(alp-90)<d && Abs(bet-90)<d && Abs(gam-90)<d ) Alert('B', warn_ang)
      If(( Abs(alp-90)>d && Abs(bet-90)>d ) ||
         ( Abs(alp-90)>d && Abs(gam-90)>d ) ||
         ( Abs(bet-90)>d && Abs(gam-90)>d ) )               Throw( warn_ang)
    }
    Else If(setting == 'orthorhombic') {
      If( Abs(a-b)<d || Abs(a-c)<d || Abs(b-c)<d )          Alert('B',warn_len)
      If( Abs(alp-90)>d || Abs(bet-90)>d || Abs(gam-90)>d ) Throw( warn_ang)
    }
    Else If(setting == 'tetragonal') {
      If( Abs(a-b)<d && Abs(a-c)<d && Abs(b-c)<d )          Alert('B',warn_len)
      If( Abs(a-b)>d && Abs(a-c)>d )                        Throw( warn_len)
      If( Abs(alp-90)>d || Abs(bet-90)>d || Abs(gam-90)>d ) Throw( warn_ang)
    }
    Else If(setting == 'trigonal' || setting == 'hexagonal') {
      If( Abs(a-b)<d && Abs(a-c)<d && Abs(b-c)<d )          Alert('B', warn_len)
      If( Abs(a-b)>d && Abs(a-c)>d )                        Throw( warn_len)
      If( Abs(alp-90)<d && Abs(bet-90)<d && Abs(gam-90)<d ) Throw( warn_ang)
      If( Abs(gam-120)>d || Abs(alp-90)>d || Abs(bet-90)>d) Throw( warn_ang)
    }
    Else If(setting == 'rhombohedral') {
      If( Abs(a-b)>d || Abs(a-c)>d || Abs(b-c)>d )          Throw( warn_len)
      If( Abs(alp-90)<d || Abs(bet-90)<d || Abs(gam-90)<d ) Alert('B', warn_ang)
      If( Abs(alp-bet)>d || Abs(alp-gam)>d || Abs(bet-gam)>d) Throw( warn_ang)
    }
    Else If(setting == 'cubic') {
      If( Abs(a-b)>d || Abs(a-c)>d || Abs(b-c)>d )          Throw( warn_len)
      If( Abs(alp-90)>d || Abs(bet-90)>d || Abs(gam-90)>d ) Throw( warn_ang)
    }
;

     save_
 
 
save_symmetry.Int_Tables_number
    _definition.id             '_symmetry.Int_Tables_number'
     loop_
    _alias.definition_id       '_symmetry_Int_Tables_number'
    _definition.update           2012-11-22
    _description.text
;
     Space-group number from International Tables for Cryst., Vol. A.
;
    _name.category_id            symmetry
    _name.object_id              Int_Tables_number
    _type.purpose                Number 
    _type.source                 Assigned 
    _type.container              Single
    _type.contents               Index
    _enumeration.range           1:230
     save_
 
 
save_symmetry.multiplicity
    _definition.id             '_symmetry.multiplicity'
    _definition.update           2012-11-22
    _description.text
;
     Number of unique symmetry elements in the space group.
;
    _name.category_id            symmetry
    _name.object_id              multiplicity
    _type.purpose                Number 
    _type.source                 Derived 
    _type.container              Single
    _type.contents               Count
    _enumeration.range           1:192
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
     n =  0

     Loop  s  as  symmetry_equiv  n +=  1 

      _symmetry.multiplicity  =   n
;
     save_
 
 
save_symmetry.space_group_name_Hall
    _definition.id             '_symmetry.space_group_name_Hall'
     loop_
    _alias.definition_id       '_symmetry_space_group_name_Hall'
    _definition.update           2012-11-22
    _description.text
;
     Space-group symbol as described by Hall. This symbol gives the
     space-group setting explicitly. Leave spaces between the separate
     components of the symbol.
     Ref: Hall, S. R. (1981). Acta Cryst. A37, 517-525.
;
    _name.category_id            symmetry
    _name.object_id              space_group_name_Hall
    _type.purpose                Encode 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case   'P 2ac  2n' '-R 3 2"'  'P 61 2 2 (0 0 -1)'
     save_
 
 
save_symmetry.space_group_name_H_M
    _definition.id             '_symmetry.space_group_name_H_M'
     loop_
    _alias.definition_id       '_symmetry_space_group_name_H-M'
                               '_symmetry.space_group_name_H-M'
    _definition.update           2013-04-07
    _description.text
;
     Hermann-Mauguin space-group symbol. Note that the H-M symbol does
     not necessarily contain complete information about the symmetry
     and the space-group origin. If used always supply the FULL symbol
     from International Tables for Crystallography, Vol. A (1987) and
     indicate the origin and the setting if it is not implicit. If
     there is any doubt that the equivalent positions can be uniquely
     deduced from this symbol specify the _symmetry_equiv.pos_as_xyz
     or *_Hall data items as well. Leave spaces between symbols
     referring to different axes.
;
    _name.category_id            symmetry
    _name.object_id              space_group_name_H_M
    _type.purpose                Encode 
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case   'P 1 21/m 1'
                                'P 2/n 2/n 2/n (origin at -1)'
                                'R -3 2/m'
     save_
 
#-----------------------------------------------------------------------------
 
save_SYMMETRY_EQUIV
 
    _definition.id               SYMMETRY_EQUIV
    _definition.scope            Category
    _definition.class            Loop
    _definition.update           2013-09-08
    _description.text
;
     The CATEGORY of data items used to describe symmetry equivalent sites
     in the crystal unit cell.
;
    _name.category_id            SYMMETRY
    _name.object_id              EQUIV
    _category.key_id           '_symmetry_equiv.key'
    _category.key_list        ['_symmetry_equiv.pos_site_id']
 

save_symmetry_equiv.key
    _definition.id             '_symmetry_equiv.key'
    _definition.update           2012-11-22
    _description.text
;
     Value is a unique key to a set of SYMMETRY_EQUIV items 
     in a looped list.
;
    _name.category_id            equiv
    _name.object_id              key
    _type.purpose                Key
    _type.source                 Related
    _type.container              Single
    _type.contents               Implied
     loop_
    _method.purpose
    _method.expression
     Definition
;         _type.contents = Type_Contents(symmetry_equiv.pos_site_id) 
;
     Evaluation
;         _symmetry_equiv.key = _symmetry_equiv.pos_site_id
;
     save_
 
save_symmetry_equiv.pos_as_xyz
    _definition.id             '_symmetry_equiv.pos_as_xyz'
     loop_
    _alias.definition_id       '_symmetry_equiv_pos_as_xyz'
    _definition.update           2012-11-22
    _description.text
;
     Symmetry equivalent position in the 'xyz' representation. Except
     for the space group P1, this data will be repeated in a loop.
     The format of the data item is as per International Tables for
     Crystallography, Vol. A. (1987). All equivalent positions should
     be entered, including those for lattice centring and a centre of
     symmetry, if present.
;
    _name.category_id            equiv
    _name.object_id              pos_as_xyz
    _type.purpose                Encode  
    _type.source                 Recorded 
    _type.container              Single
    _type.contents               Text
     loop_
    _description_example.case    -y+x,-y,1/3+z
     save_
 
 
save_symmetry_equiv.pos_site_id
    _definition.id             '_symmetry_equiv.pos_site_id'
     loop_
    _alias.definition_id       '_symmetry_equiv_pos_site_id'
    _definition.update           2012-12-30
    _description.text
;
     Index identifying each entry in the _symmetry_equiv.pos_as_xyz
     list. It is normally the sequence number of the entry in that
     list, and should be identified with the code 'n' in the geometry
     symmetry codes of the form 'n_klm'.
;
    _name.category_id            equiv
    _name.object_id              pos_site_id
    _type.purpose                Number
    _type.source                 Assigned
    _type.container              Single
    _type.contents               Index  
    _enumeration.range           1:
    loop_
   _method.purpose
   _method.expression
    Evaluation
;
     _symmetry_equiv.pos_site_id = Current_Row(_symmetry_equiv) + 1
;
     save_
 
 
save_symmetry_equiv.R
    _definition.id             '_symmetry_equiv.R'
    _definition.update           2012-11-22
    _description.text
;
     A matrix containing the symmetry rotation operations of a space group
 
                    |  r11  r12  r13  |
              R  =  |  r21  r22  r23  |
                    |  r31  r32  r33  |
;
    _name.category_id            equiv
    _name.object_id              R
    _type.purpose                Number 
    _type.source                 Derived
    _type.container              Matrix
    _type.contents               Real
    _type.dimension              [3,3]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
                       sm =  _symmetry_equiv.Seitz_matrix

        _symmetry_equiv.R =  [[sm[0,0],sm[0,1],sm[0,2]],
                              [sm[1,0],sm[1,1],sm[1,2]],
                              [sm[2,0],sm[2,1],sm[2,2]]] 
;
     save_
 
 
save_symmetry_equiv.RT
    _definition.id             '_symmetry_equiv.RT'
    _definition.update           2012-11-22
    _description.text
;
     The TRANSPOSE of the symmetry rotation matrix representing the point
     group opertions of the space group
 
                     |  r11  r21  r31  |
              RT  =  |  r12  r22  r32  |
                     |  r13  r23  r33  |
;
    _name.category_id            equiv
    _name.object_id              RT
    _type.purpose                Number 
    _type.source                 Derived   
    _type.container              Matrix
    _type.contents               Real
    _type.dimension              [3,3]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
        _symmetry_equiv.RT =  Transpose (_symmetry_equiv.R)
;
     save_
 
 
save_symmetry_equiv.Seitz_matrix
    _definition.id             '_symmetry_equiv.Seitz_matrix'
    _definition.update           2012-11-22
    _description.text
;
     A matrix containing the symmetry operations of a space group
     in 4x4 Seitz format.
 
                    |  r11  r12  r13  t1  |
       | R  T |     |  r21  r22  r23  t2  |
       | 0  1 |     |  r31  r32  r33  t3  |
                    |   0    0    0    1  |
;
    _name.category_id            equiv
    _name.object_id              Seitz_matrix
    _type.purpose                Number 
    _type.source                 Derived  
    _type.container              Matrix
    _type.contents               Real
    _type.dimension              [4,4]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
   _symmetry_equiv.Seitz_matrix =  SeitzFromJones (_symmetry_equiv.pos_as_xyz)
;
     save_
 
 
save_symmetry_equiv.T
    _definition.id             '_symmetry_equiv.T'
    _definition.update           2012-11-22
    _description.text
;
     A vector containing the symmetry translation operations of a space group.
;
    _name.category_id            equiv
    _name.object_id              T
    _type.purpose                Number 
    _type.source                 Derived
    _type.container              Matrix
    _type.contents               Real
    _type.dimension              [3]
     loop_
    _method.purpose   
    _method.expression
     Evaluation
;
                       sm =  _symmetry_equiv.Seitz_matrix

        _symmetry_equiv.T =   [sm[0,3],sm[1,3],sm[2,3]] 
;
     save_
 
     save_   #------- close the SYMMETRY_EQUIV category
 
     save_   #------- close the SYMMETRY category
 
     save_   #------- close the EXPTL category

     save_   #------- close the EXPERIMENTS category
 
     save_   #------- close the EXPERIMENTAL category

      
#=============================================================================
#  The dictionary's creation history.
#============================================================================
   
     loop_
    _dictionary_audit.version
    _dictionary_audit.date
    _dictionary_audit.revision
   
     1.0.0   2005-12-12
;
     Initial CORE_CRYSTAL dictionary constructed from CORE_3 v3.5.02
;
     1.0.01  2005-12-20
;
     In methods change all '<-' to '='.
;
     1.1.01  2006-02-11
;
     Remove dictionary definition from save frame.
;
     1.1.02  2006-02-12
;
     Add _dictionary.parent_id.
     Insert tuples for template import arguments
     Change category 'core_templates' to 'template'
;
     1.2.01   2006-02-21
;
     Basic change in dictionary structure where the dictionary data block now
     contains a saveframe defining the category of the DICTIONRY to which
     contained data categories are linked. It differs from other CATEGORY
     definitions in that its name is NOT part of the child data tags.
     This change allows imported dictionaries to be inserted without their
     data block header or non-savedframed attributes.
;
     1.2.02   2006-03-07
;
     Add categories CHEMICAL and SYMMETRY to complete CRYSTAL dictionary.     
;
     1.3.01   2006-06-20
;
     Apply DDL 3.6.04 attribute changes.
;
     1.3.02   2006-06-30
;
     Apply DDL 3.6.05 attribute changes.
;
     1.3.03   2006-09-07
;
     Apply DDL 3.6.08 attribute changes.
;
     1.3.04   2006-11-13
;
     Apply DDL 3.6.10 attribute changes.
;
     1.4.01   2006-11-15
;
     Apply DDL 3.7.01 attribute changes.
;
     1.4.02   2006-11-16
;
     Made EXPTL_CRYSTAL with scope "Set"
;
     1.4.03   2006-12-14
;
     Apply DDL 3.7.03 attribute changes.
;
     1.4.04   2007-02-07
;
     Apply DDL 3.7.04 attribute changes.
;
     1.4.05   2007-02-09
;
     Corrected TYPE in _chemical_conn_atom.number and 
     _symmetry_equiv.pos_site_id
;
     1.4.06   2007-10-13
;
     Placed tags in _category_key.primitive lists within quotes. 
;
     1.4.07   2007-11-22
;
     Changed the local variables in the method of _cell.orthogonal_matrix 
     simply for additional clarity.
;
     1.4.08   2008-01-18
;
     Replaced import_list controls with leading uppercase character.
     Changed import_list [....] to [[....]]
;
     1.4.09   2008-01-22
;
     In _exptl_crystal_appearance.hue change imported state list to 
     colour_RBG
;
     1.4.10   2008-02-07
;
     In _exptl_crystal_appearance.hue change colour_RBG to colour_RGB
;
     1.4.11   2008-03-28
;
     Change _type.purpose for _exptl_absorpt.correction_T_min and T_max
     from Limit to Measured.
;
     1.4.12   2008-06-18
;
     Change _import_list.id to be ((.....))
     For all *.key items change _type.contents from Code to Inherited
     For other *.id items some _type.purpose from Key to Identify
;
     1.4.13   2008-06-19
;
     Make EXPTL_CRYSTAL a List category and add _exptl_crystal.key definition.
     Ensure that all items with _type.contents Code are enumerated.
;
     1.4.14   2008-06-24
;
     Change all _type.dimension values
     Add to _cell_length.*,  _cell_*.*, etc. the _definition.update
     and _description.text attributes.
;
     1.5.01   2011-06-07
;
   Replace category class "List" with "Loop"
   Replace all "Tuple" with "List"
   Replace all "Array" with "List"
   Place all import lists into [[......]]
;
     2.1.01   2011-06-18
;
  Introduction of NESTED save frames and the resolution of Loop
  categories which are parents of Loop categories. 
  Introduction of the "Reference" class of category.
;
     2.1.02   2011-06-29
;
  Reduced Reference categories to *.key and redefined item.
;
     2.1.03   2011-07-02
;
  Place name.category_id in each category definition.      
;
     2.2.01   2011-07-28
;
   Make the DDL 3.08 changes
;
     2.2.02   2011-08-03
;
   Change name of import file com_att.dic to templ_attr.cif
   Change name of import file com_val.dic to templ_templcif
;
     2.2.03   2011-08-15
;
   move the EXPTL_ABSORB category within the EXPTL_CRYSTALS category
;
     2.2.04   2011-12-01
;
   Change container type from List to Matrix for relevant item definitions
;
     2.2.05   2012-01-25
;
   For import.get change the key "fram" to "save".
;
     2.3.01   2012-05-07
;
   Apply DDLm version 3.10.01 changes.
;
     2.3.02   2012-10-16
;
   Apply DDLm version 3.10.02 type.container and type.contents changes.
   Remove type.contents "Inherited"; insert Definition method expression.
;
     2.3.03   2012-11-20
;
   Invoke container functions Matrix, List in methods scripts where needed. 
;
     2.3.04   2012-11-22
;
   Add DDL1 tags as alias.definition_id values
   Add SPACE_GROUP definitions
;
     2.3.05   2012-11-30
;
   Add "\" to method expression for cell_reciprocal.convert_U_to_beta
   Doug's TEMPORARY FIX!!!!!
;
     2.3.06   2012-12-11
;
   Add chemical_properties_biological, chemical_properties_physical
       chemical_melting_point_lt and _gt
       chemical_temperature_decomposition, _lt and _gt
       chemical_temperature_sublimation, _lt and _gt.
       crystal.density_meas_gt, _lt
       crystal.density_meas_temp_gt, _lt
       exptl_crystal.recrystallization_method
       space_group_symop.sg_id
;
     2.3.07   2012-12-30
;
   Add method for symmetry_equiv.pos_site_id using "Current_Row" funct.
;
     2.3.08   2013-01-18
;
   Add exptl.transmission_factor_max and *.min
   Add chemical.enantioexcess_bulk, chemical.enantioexcess_bulk_technique
   Add chemical.enantioexcess_crystal_technique
   Add chemical.identifier_inchi and related items.
;
     2.4.01   2013-03-08
;
   Changes arising from alerts issued by ALIGN.
;
     2.4.02   2013-04-07
;
   Added alias symmetry.space_group_name_H-M to symmetry.space_group_name_H_M.
;
     2.4.03   2013-04-11
;
   Added type.contents 'Implied' to all Key definitions
   Removed desription.common from all defs; inconsistent invocations
   Replace type.source state 'Observed' with 'Recorded'
   Replace type.source state 'Selected' with 'Assigned'
;
     2.4.04   2013-04-16
;
   Changed type.source 'Measured' to 'Recorded'
;
     2.4.05   2013-04-17
;
   Changed type.source 'Quantity' to 'Number' or 'Encode'
   Changed several 'Encode' to 'Composite'
;
     2.4.06   2013-04-24
;
   Removed 'Pairs' from type.contents; replaced with "Real", "Code", etc.
;
     2.4.07   2013-04-28
;
   Changed _cell_reciprocal.convert_U_to_beta to .convert_Uij_to_betaij
   Added _cell_reciprocal.convert_Uiso_to_Uij
;
    2.4.08   2013-09-08
;
    Add attribute category.key_list to all Loop categories.
;
